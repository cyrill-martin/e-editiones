<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="20" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="false">
 <co id="0" binds="1 2 3 4 5 2 3 6 6 5">
  <template name="Q{}collectionItems" flags="os" line="647" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="3">
   <forEach role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="648">
    <slash simple="1">
     <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
      <dot flags="a"/>
     </treat>
     <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
    </slash>
    <choose line="653">
     <and op="and">
      <and op="and">
       <fn name="exists">
        <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
       </fn>
       <fn name="empty">
        <axis name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </fn>
      </and>
      <fn name="empty">
       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
      </fn>
     </and>
     <let line="654" var="isPreferredLanguage" as="document-node()" slot="0" eval="7">
      <doc line="655" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
       <callT name="isPreferredLanguage" bSlot="0"/>
      </doc>
      <choose line="659">
       <vc op="eq" onEmpty="0" comp="CCC">
        <cast as="xs:string" emptiable="0">
         <data>
          <varRef name="isPreferredLanguage" slot="0"/>
         </data>
        </cast>
        <str val="true"/>
       </vc>
       <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="660" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
        <sequence>
         <att name="property" flags="l">
          <str val="rdf:li"/>
         </att>
         <att name="content" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <dot type="element()"/>
           </data>
          </convert>
         </att>
         <choose line="661">
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
          </fn>
          <att line="663" name="xml:lang" nsuri="http://www.w3.org/XML/1998/namespace" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <cast as="xs:untypedAtomic" emptiable="0">
             <fn name="string">
              <convert from="xs:untypedAtomic" to="xs:string">
               <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
              </convert>
             </fn>
            </cast>
           </convert>
          </att>
         </choose>
         <choose line="666">
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
          </fn>
          <sequence line="668">
           <att name="datatype" flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <callT name="curie" bSlot="1">
                 <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                  <axis line="669" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                 </withParam>
                </callT>
               </mergeAdj>
              </data>
             </convert>
             <str val=""/>
            </fn>
           </att>
           <let line="672" var="datatype-xmlns" as="document-node()" slot="1" eval="7">
            <doc line="673" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
             <callT name="xmlns" bSlot="2">
              <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
               <axis line="674" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
              </withParam>
             </callT>
            </doc>
            <copyOf line="677" flags="vc">
             <slash>
              <slash simple="1">
               <varRef name="datatype-xmlns" slot="1"/>
               <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
              <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
             </slash>
            </copyOf>
           </let>
          </sequence>
         </choose>
         <callT line="680" name="textDetailLink" bSlot="3">
          <withParam name="Q{}property" flags="c" as="xs:string">
           <fn line="681" name="local-name">
            <dot type="element()"/>
           </fn>
          </withParam>
          <withParam name="Q{}value" flags="c" as="item()">
           <dot line="682" type="element()"/>
          </withParam>
         </callT>
         <callT line="684" name="connector" bSlot="4">
          <withParam name="Q{}criteria" flags="c" as="element()*">
           <axis line="685" name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          </withParam>
         </callT>
        </sequence>
       </elem>
       <true/>
       <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="691" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
        <sequence>
         <att name="property" flags="l">
          <str val="rdf:li"/>
         </att>
         <att name="content" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <dot type="element()"/>
           </data>
          </convert>
         </att>
         <choose line="692">
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
          </fn>
          <att line="694" name="xml:lang" nsuri="http://www.w3.org/XML/1998/namespace" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <cast as="xs:untypedAtomic" emptiable="0">
             <fn name="string">
              <convert from="xs:untypedAtomic" to="xs:string">
               <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
              </convert>
             </fn>
            </cast>
           </convert>
          </att>
         </choose>
         <choose line="697">
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
          </fn>
          <sequence line="699">
           <att name="datatype" flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <callT name="curie" bSlot="5">
                 <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                  <axis line="700" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                 </withParam>
                </callT>
               </mergeAdj>
              </data>
             </convert>
             <str val=""/>
            </fn>
           </att>
           <let line="703" var="datatype-xmlns" as="document-node()" slot="2" eval="7">
            <doc line="704" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
             <callT name="xmlns" bSlot="6">
              <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
               <axis line="705" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
              </withParam>
             </callT>
            </doc>
            <copyOf line="708" flags="vc">
             <slash>
              <slash simple="1">
               <varRef name="datatype-xmlns" slot="2"/>
               <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
              <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
             </slash>
            </copyOf>
           </let>
          </sequence>
         </choose>
        </sequence>
       </elem>
      </choose>
     </let>
     <true/>
     <sequence line="716">
      <choose>
       <gc op="=" card="1:1" comp="CCC">
        <attVal name="Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType" chk="0"/>
        <str val="Literal"/>
       </gc>
       <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="717" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
        <sequence>
         <att name="class" flags="l">
          <str val="property-object"/>
         </att>
         <att name="property" flags="l">
          <str val="rdf:li"/>
         </att>
         <callT line="718" name="property-objects" bSlot="7"/>
        </sequence>
       </elem>
       <true/>
       <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="722" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
        <sequence>
         <att name="class" flags="l">
          <str val="property-object"/>
         </att>
         <att name="rel" flags="l">
          <str val="rdf:li"/>
         </att>
         <callT line="723" name="property-objects" bSlot="8"/>
        </sequence>
       </elem>
      </choose>
      <callT line="727" name="connector" bSlot="9">
       <withParam name="Q{}criteria" flags="c" as="element()*">
        <axis line="728" name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </withParam>
      </callT>
     </sequence>
    </choose>
   </forEach>
  </template>
 </co>
 <co id="7" binds="8">
  <template name="Q{}rdf_resource-attribute" flags="os" line="444" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <choose role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="445">
    <fn name="exists">
     <slash simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
       <dot flags="a"/>
      </treat>
      <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}resource)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='resource';"/>
     </slash>
    </fn>
    <callT line="446" name="resourceDetailLink" bSlot="0" flags="t">
     <withParam name="Q{}property" flags="c" as="xs:string">
      <fn line="447" name="local-name">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
        <dot flags="a"/>
       </treat>
      </fn>
     </withParam>
     <withParam name="Q{}namespace" flags="c" as="xs:string">
      <str val=""/>
     </withParam>
     <withParam name="Q{}localname" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}resource)?">
      <slash line="449" simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}resource)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='resource';"/>
      </slash>
     </withParam>
    </callT>
   </choose>
  </template>
 </co>
 <co id="9" binds="10 11 12 10 13 13 13 13 13">
  <template name="Q{}getLabel" flags="os" line="770" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="9">
   <let role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="801" var="vv:v0" as="xs:string?" slot="2" eval="13">
    <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
     <check card="?" diag="0|1||fn:contains">
      <cvUntyped to="xs:string">
       <data>
        <gVarRef name="Q{}language" bSlot="0"/>
       </data>
      </cvUntyped>
     </check>
    </treat>
    <sequence line="771">
     <param name="Q{}uri" slot="0">
      <str role="select" val=""/>
      <supplied role="conversion" slot="0"/>
     </param>
     <param line="772" name="Q{}property" slot="1">
      <str role="select" val=""/>
      <supplied role="conversion" slot="1"/>
     </param>
     <let line="777" var="uri-noslash" as="document-node()" slot="3" eval="7">
      <doc line="779" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" flags="t" validation="preserve">
       <choose>
        <fn name="contains">
         <cvUntyped to="xs:string">
          <cast line="775" as="xs:untypedAtomic" emptiable="0">
           <fn name="substring">
            <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring">
             <check card="?" diag="0|0||fn:substring">
              <cvUntyped to="xs:string">
               <data>
                <varRef name="uri" slot="0"/>
               </data>
              </cvUntyped>
             </check>
            </treat>
            <arith op="-" calc="i-i">
             <fn name="string-length">
              <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:string-length">
               <check card="?" diag="0|0||fn:string-length">
                <cvUntyped to="xs:string">
                 <data>
                  <varRef name="uri" slot="0"/>
                 </data>
                </cvUntyped>
               </check>
              </treat>
             </fn>
             <int val="1"/>
            </arith>
           </fn>
          </cast>
         </cvUntyped>
         <str val="/"/>
        </fn>
        <valueOf line="780" flags="l">
         <fn name="substring">
          <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring">
           <check card="?" diag="0|0||fn:substring">
            <cvUntyped to="xs:string">
             <data>
              <varRef name="uri" slot="0"/>
             </data>
            </cvUntyped>
           </check>
          </treat>
          <int val="1"/>
          <arith op="-" calc="i-i">
           <fn name="string-length">
            <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:string-length">
             <check card="?" diag="0|0||fn:string-length">
              <cvUntyped to="xs:string">
               <data>
                <varRef name="uri" slot="0"/>
               </data>
              </cvUntyped>
             </check>
            </treat>
           </fn>
           <int val="1"/>
          </arith>
         </fn>
        </valueOf>
        <true/>
        <valueOf line="783" flags="l">
         <fn name="string-join">
          <convert from="xs:anyAtomicType" to="xs:string">
           <data>
            <mergeAdj>
             <varRef name="uri" slot="0"/>
            </mergeAdj>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </valueOf>
       </choose>
      </doc>
      <let line="789" var="namespace" as="document-node()" slot="4" eval="7">
       <doc line="790" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
        <callT name="get-ns" bSlot="1">
         <withParam name="Q{}uri" flags="c" as="document-node()">
          <varRef line="791" name="uri-noslash" slot="3"/>
         </withParam>
        </callT>
       </doc>
       <let line="810" var="vv:v2" as="xs:string" slot="5" eval="13">
        <cast as="xs:string" emptiable="0">
         <data>
          <varRef name="namespace" slot="4"/>
         </data>
        </cast>
        <let line="794" var="localname" as="document-node()" slot="6" eval="7">
         <doc line="795" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
          <callT name="get-name" bSlot="2">
           <withParam name="Q{}uri" flags="c" as="document-node()">
            <varRef line="796" name="uri-noslash" slot="3"/>
           </withParam>
          </callT>
         </doc>
         <choose line="801">
          <fn name="exists">
           <filter flags="b">
            <slash>
             <fn name="key">
              <str val="Q{http://saxon.sf.net/}kk102"/>
              <data>
               <varRef name="uri" slot="0"/>
              </data>
              <root/>
             </fn>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2000/01/rdf-schema#}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2000/01/rdf-schema#'&amp;&amp;q.local==='label';"/>
            </slash>
            <fn name="contains">
             <cvUntyped to="xs:string">
              <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
             </cvUntyped>
             <varRef name="vv:v0" slot="2"/>
            </fn>
           </filter>
          </fn>
          <let line="802" var="vv:v1" as="xs:string?" slot="7" eval="13">
           <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
            <check card="?" diag="0|1||fn:contains">
             <cvUntyped to="xs:string">
              <data>
               <gVarRef name="Q{}language" bSlot="3"/>
              </data>
             </cvUntyped>
            </check>
           </treat>
           <valueOf>
            <fn name="string-join">
             <convert from="xs:untypedAtomic" to="xs:string">
              <data>
               <docOrder intra="1">
                <filter flags="b">
                 <slash>
                  <fn name="key">
                   <str val="Q{http://saxon.sf.net/}kk102"/>
                   <data>
                    <varRef name="uri" slot="0"/>
                   </data>
                   <root/>
                  </fn>
                  <axis name="child" nodeTest="element(Q{http://www.w3.org/2000/01/rdf-schema#}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2000/01/rdf-schema#'&amp;&amp;q.local==='label';"/>
                 </slash>
                 <fn name="contains">
                  <cvUntyped to="xs:string">
                   <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
                  </cvUntyped>
                  <varRef name="vv:v1" slot="7"/>
                 </fn>
                </filter>
               </docOrder>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </valueOf>
          </let>
          <fn line="804" name="exists">
           <filter flags="b">
            <slash>
             <fn name="key">
              <str val="Q{http://saxon.sf.net/}kk102"/>
              <data>
               <varRef name="uri" slot="0"/>
              </data>
              <root/>
             </fn>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2000/01/rdf-schema#}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2000/01/rdf-schema#'&amp;&amp;q.local==='label';"/>
            </slash>
            <fn name="contains">
             <cvUntyped to="xs:string">
              <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
             </cvUntyped>
             <str val="en"/>
            </fn>
           </filter>
          </fn>
          <valueOf line="805">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <docOrder intra="1">
               <filter flags="b">
                <slash>
                 <fn name="key">
                  <str val="Q{http://saxon.sf.net/}kk102"/>
                  <data>
                   <varRef name="uri" slot="0"/>
                  </data>
                  <root/>
                 </fn>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2000/01/rdf-schema#}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2000/01/rdf-schema#'&amp;&amp;q.local==='label';"/>
                </slash>
                <fn name="contains">
                 <cvUntyped to="xs:string">
                  <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
                 </cvUntyped>
                 <str val="en"/>
                </fn>
               </filter>
              </docOrder>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <fn line="807" name="exists">
           <slash>
            <fn name="key">
             <str val="Q{http://saxon.sf.net/}kk102"/>
             <data>
              <varRef name="uri" slot="0"/>
             </data>
             <root/>
            </fn>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2000/01/rdf-schema#}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2000/01/rdf-schema#'&amp;&amp;q.local==='label';"/>
           </slash>
          </fn>
          <valueOf line="808">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <docOrder intra="1">
               <slash>
                <fn name="key">
                 <str val="Q{http://saxon.sf.net/}kk102"/>
                 <data>
                  <varRef name="uri" slot="0"/>
                 </data>
                 <root/>
                </fn>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2000/01/rdf-schema#}label)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2000/01/rdf-schema#'&amp;&amp;q.local==='label';"/>
               </slash>
              </docOrder>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
          <and line="810" op="and">
           <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
            <data>
             <gVarRef name="Q{}namespaces" bSlot="4"/>
            </data>
            <str val="true"/>
           </gc>
           <fn name="exists">
            <filter flags="b">
             <slash simple="1">
              <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
               <dot flags="a"/>
              </treat>
              <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
             </slash>
             <and op="and">
              <vc op="eq" onEmpty="0" comp="CCC">
               <data>
                <dot type="namespace-node()"/>
               </data>
               <varRef name="vv:v2" slot="5"/>
              </vc>
              <fn name="name">
               <dot type="namespace-node()"/>
              </fn>
             </and>
            </filter>
           </fn>
          </and>
          <let line="812" var="vv:v3" as="xs:string" slot="8" eval="13">
           <cast as="xs:string" emptiable="0">
            <data>
             <varRef name="namespace" slot="4"/>
            </data>
           </cast>
           <valueOf line="814">
            <fn line="812" name="concat">
             <fn name="concat">
              <cast as="xs:untypedAtomic" emptiable="0">
               <fn name="name">
                <check card="?" diag="0|0||fn:name">
                 <filter flags="b">
                  <slash simple="1">
                   <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
                    <dot flags="a"/>
                   </treat>
                   <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
                  </slash>
                  <and op="and">
                   <vc op="eq" onEmpty="0" comp="CCC">
                    <data>
                     <dot type="namespace-node()"/>
                    </data>
                    <varRef name="vv:v3" slot="8"/>
                   </vc>
                   <fn name="name">
                    <dot type="namespace-node()"/>
                   </fn>
                  </and>
                 </filter>
                </check>
               </fn>
              </cast>
              <str val=":"/>
             </fn>
             <data line="814">
              <varRef name="localname" slot="6"/>
             </data>
            </fn>
           </valueOf>
          </let>
          <and line="818" op="and">
           <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
            <data>
             <gVarRef name="Q{}namespaces" bSlot="5"/>
            </data>
            <str val="true"/>
           </gc>
           <gc op="=" card="N:1" comp="CCC">
            <data>
             <filter flags="b">
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
                <dot flags="a"/>
               </treat>
               <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
              </slash>
              <fn name="not">
               <fn name="name">
                <dot type="namespace-node()"/>
               </fn>
              </fn>
             </filter>
            </data>
            <data>
             <varRef name="namespace" slot="4"/>
            </data>
           </gc>
          </and>
          <valueOf line="819">
           <fn name="concat">
            <str val=":"/>
            <data>
             <varRef name="localname" slot="6"/>
            </data>
           </fn>
          </valueOf>
          <and line="821" op="and">
           <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
            <data>
             <gVarRef name="Q{}namespaces" bSlot="6"/>
            </data>
            <str val="false"/>
           </gc>
           <gc op="=" card="N:1" comp="CCC">
            <data>
             <filter flags="b">
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
                <dot flags="a"/>
               </treat>
               <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
              </slash>
              <fn name="not">
               <fn name="name">
                <dot type="namespace-node()"/>
               </fn>
              </fn>
             </filter>
            </data>
            <data>
             <varRef name="namespace" slot="4"/>
            </data>
           </gc>
          </and>
          <valueOf line="822">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <varRef name="localname" slot="6"/>
            </data>
           </convert>
          </valueOf>
          <and line="824" op="and">
           <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
            <data>
             <gVarRef name="Q{}namespaces" bSlot="7"/>
            </data>
            <str val="true"/>
           </gc>
           <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
            <data>
             <varRef name="property" slot="1"/>
            </data>
            <str val="type"/>
           </gc>
          </and>
          <valueOf line="825">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <varRef name="localname" slot="6"/>
            </data>
           </convert>
          </valueOf>
          <gc line="827" op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <data>
            <gVarRef name="Q{}namespaces" bSlot="8"/>
           </data>
           <str val="false"/>
          </gc>
          <valueOf line="828">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <varRef name="localname" slot="6"/>
            </data>
           </convert>
          </valueOf>
          <true/>
          <valueOf line="831">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="uri" slot="0"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </valueOf>
         </choose>
        </let>
       </let>
      </let>
     </let>
    </sequence>
   </let>
  </template>
 </co>
 <co id="14" binds="15 5 14">
  <template name="Q{}buildList" flags="os" line="350" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="1">
   <elem role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="351" name="div" nsuri="" namespaces="rdf rdfs">
    <sequence>
     <att name="class" flags="l">
      <str val="property-object"/>
     </att>
     <att name="typeof" flags="l">
      <str val="rdf:List"/>
     </att>
     <elem line="352" name="div" nsuri="" flags="l" namespaces="rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="property-object"/>
       </att>
       <att name="rel" flags="l">
        <str val="rdf:first"/>
       </att>
       <callT line="353" name="embeddedRdfDescription" bSlot="0"/>
      </sequence>
     </elem>
     <elem line="355" name="div" nsuri="" flags="l" namespaces="rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="property-object"/>
       </att>
       <att name="rel" flags="l">
        <str val="rdf:rest"/>
       </att>
       <choose line="357">
        <fn name="exists">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|7|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
        </fn>
        <let line="359" var="vv:cc-1547847999" as="element()*" slot="0" eval="4">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|7|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
         <sequence line="358">
          <callT name="connector" bSlot="1">
           <withParam name="Q{}criteria" flags="c" as="element()*">
            <varRef name="vv:cc-1547847999" slot="0"/>
           </withParam>
          </callT>
          <forEach line="361">
           <first>
            <varRef name="vv:cc-1547847999" slot="0"/>
           </first>
           <callT line="362" name="buildList" bSlot="2"/>
          </forEach>
         </sequence>
        </let>
        <true/>
        <att line="366" name="resource" flags="l">
         <str val="[rdf:nil]"/>
        </att>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </elem>
  </template>
 </co>
 <co id="6" binds="7 16 15 14 2 17 15">
  <template name="Q{}property-objects" flags="os" line="309" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <choose role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="311">
    <fn name="exists">
     <slash simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
       <dot flags="a"/>
      </treat>
      <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}resource)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='resource';"/>
     </slash>
    </fn>
    <callT line="312" name="rdf_resource-attribute" bSlot="0" flags="t"/>
    <fn line="314" name="exists">
     <slash simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
       <dot flags="a"/>
      </treat>
      <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}first)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='first';"/>
     </slash>
    </fn>
    <forEach line="315">
     <slash simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
       <dot flags="a"/>
      </treat>
      <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}first)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='first';"/>
     </slash>
     <callT line="316" name="ListItems" bSlot="1"/>
    </forEach>
    <gc line="319" op="=" card="1:1" comp="CCC">
     <data>
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
      </slash>
     </data>
     <str val="Resource"/>
    </gc>
    <callT line="320" name="embeddedRdfDescription" bSlot="2" flags="t"/>
    <gc line="322" op="=" card="1:1" comp="CCC">
     <data>
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
      </slash>
     </data>
     <str val="Collection"/>
    </gc>
    <forEach line="323">
     <first>
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </slash>
     </first>
     <callT line="324" name="buildList" bSlot="3" flags="t"/>
    </forEach>
    <gc line="327" op="=" card="1:1" comp="CCC">
     <data>
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
      </slash>
     </data>
     <str val="Literal"/>
    </gc>
    <sequence line="329">
     <att name="datatype">
      <fn name="string-join">
       <convert from="xs:anyAtomicType" to="xs:string">
        <data>
         <mergeAdj>
          <callT name="curie" bSlot="4">
           <withParam name="Q{}uri" flags="c" as="xs:string">
            <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral"/>
           </withParam>
          </callT>
         </mergeAdj>
        </data>
       </convert>
       <str val=""/>
      </fn>
     </att>
     <choose line="333">
      <fn name="exists">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
       </slash>
      </fn>
      <att line="335" name="xml:lang" nsuri="http://www.w3.org/XML/1998/namespace">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
            </slash>
           </data>
          </convert>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <applyT line="338" mode="Q{}copy-subtree" flags="ti" bSlot="5">
      <slash role="select" simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="13|0|XTTE0510|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="node()" jsTest="return true;"/>
      </slash>
     </applyT>
    </sequence>
    <fn line="340" name="exists">
     <slash simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
       <dot flags="a"/>
      </treat>
      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
    </fn>
    <forEach line="341">
     <slash simple="1">
      <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
       <dot flags="a"/>
      </treat>
      <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
     </slash>
     <callT line="342" name="embeddedRdfDescription" bSlot="6"/>
    </forEach>
   </choose>
  </template>
 </co>
 <co id="15" binds="2 0 18 19 20 8">
  <template name="Q{}embeddedRdfDescription" flags="os" line="184" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <choose role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="187">
    <and op="and">
     <vc op="eq" onEmpty="0" comp="CCC">
      <fn name="namespace-uri">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:namespace-uri">
        <dot flags="a"/>
       </treat>
      </fn>
      <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
     </vc>
     <gc op="=" card="N:1" comp="CCC">
      <literal count="3">
       <str val="Seq"/>
       <str val="Alt"/>
       <str val="Bag"/>
      </literal>
      <fn name="local-name">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
        <dot flags="a"/>
       </treat>
      </fn>
     </gc>
    </and>
    <elem line="190" name="div" nsuri="" namespaces="rdf rdfs">
     <sequence>
      <att name="typeof" flags="l">
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <mergeAdj>
           <callT name="curie" bSlot="0">
            <withParam name="Q{}uri" flags="c" as="xs:string">
             <fn line="191" name="concat">
              <fn name="namespace-uri">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:namespace-uri">
                <dot flags="a"/>
               </treat>
              </fn>
              <fn name="local-name">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
                <dot flags="a"/>
               </treat>
              </fn>
             </fn>
            </withParam>
           </callT>
          </mergeAdj>
         </data>
        </convert>
        <str val=""/>
       </fn>
      </att>
      <callT line="194" name="collectionItems" bSlot="1"/>
     </sequence>
    </elem>
    <fn line="199" name="exists">
     <sequence>
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <and op="and">
        <vc op="ne" onEmpty="1" comp="CCC">
         <fn name="name">
          <dot type="element()"/>
         </fn>
         <str val="http://www.w3.org/2000/01/rdf-schema#"/>
        </vc>
        <vc op="ne" onEmpty="1" comp="CCC">
         <fn name="local-name">
          <dot type="element()"/>
         </fn>
         <str val="label"/>
        </vc>
       </and>
      </filter>
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       </slash>
       <and op="and">
        <vc op="ne" onEmpty="1" comp="CCC">
         <fn name="namespace-uri">
          <dot type="attribute()"/>
         </fn>
         <str val="http://www.w3.org/2000/01/rdf-schema#"/>
        </vc>
        <and op="and">
         <vc op="ne" onEmpty="1" comp="CCC">
          <fn name="local-name">
           <dot type="attribute()"/>
          </fn>
          <str val="label"/>
         </vc>
         <vc op="ne" onEmpty="1" comp="CCC">
          <fn name="local-name">
           <dot type="attribute()"/>
          </fn>
          <str val="about"/>
         </vc>
        </and>
       </and>
      </filter>
     </sequence>
    </fn>
    <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="201" name="table" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
     <sequence>
      <choose>
       <fn name="not">
        <gc op="=" card="1:1" comp="CCC">
         <data>
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
          </slash>
         </data>
         <str val="Resource"/>
        </gc>
       </fn>
       <callT line="202" name="header" bSlot="2"/>
      </choose>
      <choose line="204">
       <gc op="=" card="1:1" comp="CCC">
        <data>
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
         </slash>
        </data>
        <str val="Resource"/>
       </gc>
       <att line="206" name="typeof" flags="l">
        <str val="rdfs:Resource"/>
       </att>
      </choose>
      <callT line="209" name="attributes" bSlot="3"/>
      <callT line="210" name="properties" bSlot="4"/>
     </sequence>
    </elem>
    <fn line="214" name="exists">
     <filter flags="b">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|9|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="parent" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </slash>
      <vc op="ne" onEmpty="1" comp="CCC">
       <fn name="name">
        <dot type="element()"/>
       </fn>
       <str val="rdf:RDF"/>
      </vc>
     </filter>
    </fn>
    <callT line="215" name="resourceDetailLink" bSlot="5" flags="t">
     <withParam name="Q{}property" flags="c" as="xs:string">
      <fn line="216" name="local-name">
       <check card="?" diag="0|0||fn:local-name">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|9|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="parent" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </check>
      </fn>
     </withParam>
     <withParam name="Q{}namespace" flags="c" as="xs:string">
      <str val=""/>
     </withParam>
     <withParam name="Q{}localname" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about)?">
      <slash line="218" simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';"/>
      </slash>
     </withParam>
    </callT>
   </choose>
  </template>
 </co>
 <co id="21" binds="10 10">
  <globalVariable name="Q{}isA" type="document-node()" line="26" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <doc baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="28" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" flags="t" validation="preserve">
    <choose>
     <fn name="contains">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:contains">
       <check card="?" diag="0|0||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <gVarRef name="Q{}language" bSlot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <str val="en"/>
     </fn>
     <valueOf flags="l">
      <str val=" a "/>
     </valueOf>
     <fn line="29" name="contains">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:contains">
       <check card="?" diag="0|0||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <gVarRef name="Q{}language" bSlot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <str val="es"/>
     </fn>
     <valueOf flags="l">
      <str val=" es "/>
     </valueOf>
     <true/>
     <valueOf flags="l">
      <str val=" a "/>
     </valueOf>
    </choose>
   </doc>
  </globalVariable>
 </co>
 <co id="1" binds="10 10 10">
  <template name="Q{}isPreferredLanguage" flags="os" line="747" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="7">
   <let role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="762" var="vv:v3" as="xs:string?" slot="0" eval="13">
    <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
     <check card="?" diag="0|1||fn:contains">
      <cvUntyped to="xs:string">
       <data>
        <gVarRef name="Q{}language" bSlot="0"/>
       </data>
      </cvUntyped>
     </check>
    </treat>
    <let line="757" var="vv:v1" as="xs:string?" slot="1" eval="13">
     <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
      <check card="?" diag="0|1||fn:contains">
       <cvUntyped to="xs:string">
        <data>
         <gVarRef name="Q{}language" bSlot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
     <let line="748" var="element" as="xs:untypedAtomic" slot="2" eval="7">
      <cast line="749" as="xs:untypedAtomic" emptiable="0">
       <fn name="name">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:name">
         <dot flags="a"/>
        </treat>
       </fn>
      </cast>
      <let line="762" var="vv:v4" as="xs:string" slot="3" eval="13">
       <cast as="xs:string" emptiable="0">
        <varRef name="element" slot="2"/>
       </cast>
       <let var="vv:v2" as="xs:string" slot="4" eval="13">
        <cast as="xs:string" emptiable="0">
         <varRef name="element" slot="2"/>
        </cast>
        <let line="757" var="vv:v0" as="xs:string" slot="5" eval="13">
         <cast as="xs:string" emptiable="0">
          <varRef name="element" slot="2"/>
         </cast>
         <choose line="753">
          <fn name="contains">
           <cvUntyped to="xs:string">
            <data>
             <slash simple="1">
              <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
               <dot flags="a"/>
              </treat>
              <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
             </slash>
            </data>
           </cvUntyped>
           <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
            <check card="?" diag="0|1||fn:contains">
             <cvUntyped to="xs:string">
              <data>
               <gVarRef name="Q{}language" bSlot="2"/>
              </data>
             </cvUntyped>
            </check>
           </treat>
          </fn>
          <valueOf line="754">
           <str val="true"/>
          </valueOf>
          <and line="757" op="and">
           <fn name="contains">
            <cvUntyped to="xs:string">
             <data>
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                <dot flags="a"/>
               </treat>
               <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
              </slash>
             </data>
            </cvUntyped>
            <str val="en"/>
           </fn>
           <fn name="empty">
            <filter flags="b">
             <slash>
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|9|XPTY0020|">
                <dot flags="a"/>
               </treat>
               <axis name="parent" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <and op="and">
              <vc op="eq" onEmpty="0" comp="CCC">
               <fn name="name">
                <dot type="element()"/>
               </fn>
               <varRef name="vv:v0" slot="5"/>
              </vc>
              <fn name="contains">
               <cvUntyped to="xs:string">
                <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
               </cvUntyped>
               <varRef name="vv:v1" slot="1"/>
              </fn>
             </and>
            </filter>
           </fn>
          </and>
          <valueOf line="758">
           <str val="true"/>
          </valueOf>
          <let line="762" var="vv:cc-1549945151" as="element()*" slot="6" eval="4">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|9|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="parent" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <and op="and">
            <and op="and">
             <fn name="empty">
              <slash simple="1">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                <dot flags="a"/>
               </treat>
               <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
              </slash>
             </fn>
             <fn name="empty">
              <filter flags="b">
               <slash>
                <varRef name="vv:cc-1549945151" slot="6"/>
                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
               </slash>
               <and op="and">
                <vc op="eq" onEmpty="0" comp="CCC">
                 <fn name="name">
                  <dot type="element()"/>
                 </fn>
                 <varRef name="vv:v2" slot="4"/>
                </vc>
                <fn name="contains">
                 <cvUntyped to="xs:string">
                  <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
                 </cvUntyped>
                 <varRef name="vv:v3" slot="0"/>
                </fn>
               </and>
              </filter>
             </fn>
            </and>
            <fn name="empty">
             <filter flags="b">
              <slash>
               <varRef name="vv:cc-1549945151" slot="6"/>
               <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
              <and op="and">
               <vc op="eq" onEmpty="0" comp="CCC">
                <fn name="name">
                 <dot type="element()"/>
                </fn>
                <varRef name="vv:v4" slot="3"/>
               </vc>
               <fn name="contains">
                <cvUntyped to="xs:string">
                 <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
                </cvUntyped>
                <str val="en"/>
               </fn>
              </and>
             </filter>
            </fn>
           </and>
          </let>
          <valueOf line="763">
           <str val="true"/>
          </valueOf>
          <true/>
          <valueOf line="766">
           <str val="false"/>
          </valueOf>
         </choose>
        </let>
       </let>
      </let>
     </let>
    </let>
   </let>
  </template>
 </co>
 <co id="5" binds="">
  <template name="Q{}connector" flags="os" line="735" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="1">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="736">
    <param name="Q{}criteria" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="738">
     <fn name="exists">
      <tail start="2">
       <varRef name="criteria" slot="0"/>
      </tail>
     </fn>
     <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="739" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="connector"/>
       </att>
       <valueOf flags="Sl">
        <str val=","/>
       </valueOf>
      </sequence>
     </elem>
     <compareToInt line="741" op="eq" val="1">
      <fn name="count">
       <fn name="subsequence">
        <varRef name="criteria" slot="0"/>
        <int val="1"/>
        <int val="2"/>
       </fn>
      </fn>
     </compareToInt>
     <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="742" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="connector"/>
       </att>
       <valueOf flags="dl">
        <str val="&amp;nbsp; and"/>
       </valueOf>
      </sequence>
     </elem>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="13" vis="PUBLIC" binds="">
  <globalParam name="Q{}namespaces" type="item()*" line="23" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <doc baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="23" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" flags="t" text="false" validation="preserve">
    <valueOf flags="Sl">
     <str val="false"/>
    </valueOf>
   </doc>
  </globalParam>
 </co>
 <co id="22" vis="PUBLIC" binds="">
  <globalParam name="Q{}mode" type="item()*" line="22" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <doc baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="22" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" flags="t" text="html" validation="preserve">
    <valueOf flags="Sl">
     <str val="html"/>
    </valueOf>
   </doc>
  </globalParam>
 </co>
 <co id="3" binds="11">
  <template name="Q{}xmlns" flags="os" line="1054" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="3">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1055">
    <param name="Q{}uri" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <let line="1056" var="namespace" as="document-node()" slot="1" eval="7">
     <doc line="1057" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
      <callT name="get-ns" bSlot="0">
       <withParam name="Q{}uri" flags="c">
        <varRef line="1058" name="uri" slot="0"/>
       </withParam>
      </callT>
     </doc>
     <let line="1062" var="vv:v0" as="xs:string" slot="2" eval="13">
      <cast as="xs:string" emptiable="0">
       <data>
        <varRef name="namespace" slot="1"/>
       </data>
      </cast>
      <choose>
       <fn name="exists">
        <filter flags="b">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
         </slash>
         <vc op="eq" comp="CCC">
          <data>
           <dot type="namespace-node()"/>
          </data>
          <varRef name="vv:v0" slot="2"/>
         </vc>
        </filter>
       </fn>
       <empty/>
       <true/>
       <compElem line="1065">
        <fn role="name" name="concat">
         <fn name="generate-id">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:generate-id">
           <dot flags="a"/>
          </treat>
         </fn>
         <str val=":dummy-for-xmlns"/>
        </fn>
        <convert role="namespace" from="xs:untypedAtomic" to="xs:string">
         <data>
          <varRef name="namespace" slot="1"/>
         </data>
        </convert>
        <empty role="content"/>
       </compElem>
      </choose>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="23" binds="">
  <template name="Q{}rdfDescriptionActions" flags="os" line="139" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="3">
   <let role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="140" var="resource" as="xs:untypedAtomic" slot="0" eval="7">
    <cast line="141" as="xs:untypedAtomic" emptiable="0">
     <fn name="string-join">
      <convert from="xs:untypedAtomic" to="xs:string">
       <data>
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="((((attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about)) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}aboutEach)) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}aboutEachPrefix)) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}bagID))" jsTest="function a() {function a() {function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='aboutEach';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='aboutEachPrefix';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='bagID';};return a()||b();"/>
        </slash>
       </data>
      </convert>
      <str val=" "/>
     </fn>
    </cast>
    <sequence ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="145">
     <elem name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="generic"/>
       </att>
       <att name="href" flags="l">
        <fn name="concat">
         <str val="?query=DESCRIBE%20%3Fr%20WHERE%20%7B%20%3Fr%20%3Fp%20&lt;"/>
         <convert from="xs:untypedAtomic" to="xs:string">
          <varRef name="resource" slot="0"/>
         </convert>
         <str val="&gt;%20%7D"/>
        </fn>
       </att>
       <att name="onclick" flags="l">
        <fn name="concat">
         <str val="javascript:rhz.describeReferrers('"/>
         <convert from="xs:untypedAtomic" to="xs:string">
          <varRef name="resource" slot="0"/>
         </convert>
         <str val="'); return false;"/>
        </fn>
       </att>
       <att name="title" flags="l">
        <fn name="concat">
         <str val="Referrers for "/>
         <convert from="xs:untypedAtomic" to="xs:string">
          <varRef name="resource" slot="0"/>
         </convert>
        </fn>
       </att>
       <valueOf flags="Sl">
        <str val="Referrers"/>
       </valueOf>
      </sequence>
     </elem>
     <choose ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="151">
      <let var="vv:cc-1543653695" as="element()*" slot="1" eval="4">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <or op="or">
        <and op="and">
         <fn name="exists">
          <filter flags="b">
           <varRef name="vv:cc-1543653695" slot="1"/>
           <and op="and">
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="namespace-uri">
              <dot type="element()"/>
             </fn>
             <str val="http://www.w3.org/2003/01/geo/wgs84_pos#"/>
            </vc>
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="local-name">
              <dot type="element()"/>
             </fn>
             <str val="lat"/>
            </vc>
           </and>
          </filter>
         </fn>
         <fn name="exists">
          <filter flags="b">
           <varRef name="vv:cc-1543653695" slot="1"/>
           <and op="and">
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="namespace-uri">
              <dot type="element()"/>
             </fn>
             <str val="http://www.w3.org/2003/01/geo/wgs84_pos#"/>
            </vc>
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="local-name">
              <dot type="element()"/>
             </fn>
             <str val="long"/>
            </vc>
           </and>
          </filter>
         </fn>
        </and>
        <fn name="exists">
         <filter flags="b">
          <varRef name="vv:cc-1543653695" slot="1"/>
          <and op="and">
           <vc op="eq" onEmpty="0" comp="CCC">
            <fn name="namespace-uri">
             <dot type="element()"/>
            </fn>
            <str val="http://www.georss.org/georss#"/>
           </vc>
           <vc op="eq" onEmpty="0" comp="CCC">
            <fn name="local-name">
             <dot type="element()"/>
            </fn>
            <str val="point"/>
           </vc>
          </and>
         </filter>
        </fn>
       </or>
      </let>
      <sequence>
       <valueOf>
        <str val="&#xA;&#x9;&#x9;&#x9; -&#xA;&#x9;&#x9;&#x9;"/>
       </valueOf>
       <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="155" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
        <sequence>
         <att name="class" flags="l">
          <str val="specific"/>
         </att>
         <att name="href" flags="l">
          <str val="#"/>
         </att>
         <att name="onclick" flags="l">
          <fn name="concat">
           <str val="javascript:rhz.callServiceOnResource('Map', '/services/map/map.jsp', '"/>
           <convert from="xs:untypedAtomic" to="xs:string">
            <varRef name="resource" slot="0"/>
           </convert>
           <str val="'); return false;"/>
          </fn>
         </att>
         <att name="title" flags="l">
          <fn name="concat">
           <str val="Map "/>
           <convert from="xs:untypedAtomic" to="xs:string">
            <varRef name="resource" slot="0"/>
           </convert>
          </fn>
         </att>
         <valueOf flags="l">
          <str val=" Map "/>
         </valueOf>
        </sequence>
       </elem>
      </sequence>
     </choose>
     <choose ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="160">
      <let var="vv:cc-1543653695" as="element()*" slot="2" eval="4">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <or op="or">
        <and op="and">
         <fn name="exists">
          <filter flags="b">
           <varRef name="vv:cc-1543653695" slot="2"/>
           <and op="and">
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="namespace-uri">
              <dot type="element()"/>
             </fn>
             <str val="http://www.w3.org/2002/12/cal/icaltzd#"/>
            </vc>
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="local-name">
              <dot type="element()"/>
             </fn>
             <str val="dtend"/>
            </vc>
           </and>
          </filter>
         </fn>
         <fn name="exists">
          <filter flags="b">
           <varRef name="vv:cc-1543653695" slot="2"/>
           <and op="and">
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="namespace-uri">
              <dot type="element()"/>
             </fn>
             <str val="http://www.w3.org/2002/12/cal/icaltzd#"/>
            </vc>
            <vc op="eq" onEmpty="0" comp="CCC">
             <fn name="local-name">
              <dot type="element()"/>
             </fn>
             <str val="dtstart"/>
            </vc>
           </and>
          </filter>
         </fn>
        </and>
        <fn name="exists">
         <filter flags="b">
          <varRef name="vv:cc-1543653695" slot="2"/>
          <and op="and">
           <vc op="eq" onEmpty="0" comp="CCC">
            <fn name="namespace-uri">
             <dot type="element()"/>
            </fn>
            <str val="http://purl.org/dc/elements/1.1/"/>
           </vc>
           <vc op="eq" onEmpty="0" comp="CCC">
            <fn name="local-name">
             <dot type="element()"/>
            </fn>
            <str val="date"/>
           </vc>
          </and>
         </filter>
        </fn>
       </or>
      </let>
      <sequence>
       <valueOf>
        <str val="&#xA;&#x9;&#x9;&#x9; -&#xA;&#x9;&#x9;&#x9;"/>
       </valueOf>
       <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="164" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
        <sequence>
         <att name="class" flags="l">
          <str val="specific"/>
         </att>
         <att name="href" flags="l">
          <str val="#"/>
         </att>
         <att name="onclick" flags="l">
          <fn name="concat">
           <str val="javascript:rhz.callServiceOnResource('Timeline', '/services/timeline/timeline.jsp', '"/>
           <convert from="xs:untypedAtomic" to="xs:string">
            <varRef name="resource" slot="0"/>
           </convert>
           <str val="'); return false;"/>
          </fn>
         </att>
         <att name="title" flags="l">
          <fn name="concat">
           <str val="Timeline "/>
           <convert from="xs:untypedAtomic" to="xs:string">
            <varRef name="resource" slot="0"/>
           </convert>
          </fn>
         </att>
         <valueOf flags="l">
          <str val=" Timeline "/>
         </valueOf>
        </sequence>
       </elem>
      </sequence>
     </choose>
     <choose ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="167">
      <fn name="exists">
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <vc op="eq" comp="CCC">
         <fn name="namespace-uri">
          <dot type="element()"/>
         </fn>
         <str val="http://rhizomik.net/s5t/s5t.owl#"/>
        </vc>
       </filter>
      </fn>
      <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="170" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
       <sequence>
        <att name="class" flags="l">
         <str val="specific"/>
        </att>
        <att name="href" flags="l">
         <str val="#"/>
        </att>
        <att name="onclick" flags="l">
         <fn name="concat">
          <str val="javascript:rhz.callServiceOnResource('Player', '/services/player/player.jsp', '"/>
          <convert from="xs:untypedAtomic" to="xs:string">
           <varRef name="resource" slot="0"/>
          </convert>
          <str val="'); return false;"/>
         </fn>
        </att>
        <att name="title" flags="l">
         <fn name="concat">
          <str val="Play "/>
          <convert from="xs:untypedAtomic" to="xs:string">
           <varRef name="resource" slot="0"/>
          </convert>
         </fn>
        </att>
        <valueOf flags="l">
         <str val=" - Play "/>
        </valueOf>
       </sequence>
      </elem>
     </choose>
    </sequence>
   </let>
  </template>
 </co>
 <co id="24" vis="PUBLIC" binds="">
  <globalParam name="Q{}logo" type="item()*" line="24" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <doc baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="24" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" flags="t" text="true" validation="preserve">
    <valueOf flags="Sl">
     <str val="true"/>
    </valueOf>
   </doc>
  </globalParam>
 </co>
 <co id="11" binds="25">
  <template name="Q{}get-ns" flags="os" line="1021" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="2">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1022">
    <param name="Q{}uri" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1024">
     <fn name="contains">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:contains">
       <check card="?" diag="0|0||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="uri" slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <str val="#"/>
     </fn>
     <valueOf line="1025">
      <fn name="concat">
       <fn name="substring-before">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring-before">
         <check card="?" diag="0|0||fn:substring-before">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="uri" slot="0"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <str val="#"/>
       </fn>
       <str val="#"/>
      </fn>
     </valueOf>
     <true/>
     <let line="1028" var="ns-without-slash" as="document-node()" slot="1" eval="7">
      <doc line="1029" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
       <callT name="substring-before-last" bSlot="0">
        <withParam name="Q{}text" flags="c">
         <varRef line="1030" name="uri" slot="0"/>
        </withParam>
        <withParam name="Q{}chars" flags="c" as="xs:string">
         <str val="/"/>
        </withParam>
       </callT>
      </doc>
      <valueOf line="1034">
       <fn name="concat">
        <data>
         <varRef name="ns-without-slash" slot="1"/>
        </data>
        <str val="/"/>
       </fn>
      </valueOf>
     </let>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="19" binds="8">
  <template name="Q{}attributes" flags="os" line="290" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <forEach role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="291">
    <sort>
     <filter role="select" flags="b">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </slash>
      <vc op="ne" onEmpty="1" comp="CCC">
       <fn name="namespace-uri">
        <dot type="attribute()"/>
       </fn>
       <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
      </vc>
     </filter>
     <sortKey line="293" comp="CCC">
      <fn role="select" name="local-name">
       <dot type="attribute()"/>
      </fn>
      <str role="order" val="ascending"/>
      <str role="lang" val=""/>
      <str role="caseOrder" val="#default"/>
      <str role="stable" val="yes"/>
      <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
     </sortKey>
    </sort>
    <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="296" name="tr" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
     <sequence>
      <elem name="td" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
       <callT name="resourceDetailLink" bSlot="0">
        <withParam name="Q{}property" flags="c" as="xs:string">
         <str val=""/>
        </withParam>
        <withParam name="Q{}namespace" flags="c" as="xs:anyURI">
         <fn line="298" name="namespace-uri">
          <dot type="attribute()"/>
         </fn>
        </withParam>
        <withParam name="Q{}localname" flags="c" as="xs:string">
         <fn line="299" name="local-name">
          <dot type="attribute()"/>
         </fn>
        </withParam>
       </callT>
      </elem>
      <elem line="302" name="td" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="#">
       <sequence>
        <att name="property" flags="l">
         <fn name="name">
          <dot type="attribute()"/>
         </fn>
        </att>
        <valueOf line="303" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="attribute()"/>
          </data>
         </convert>
        </valueOf>
       </sequence>
      </elem>
     </sequence>
    </elem>
   </forEach>
  </template>
 </co>
 <co id="25" binds="25">
  <template name="Q{}substring-before-last" flags="os" line="973" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="5">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="974">
    <param name="Q{}text" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="975" name="Q{}chars" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <choose line="977">
     <fn name="contains">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:contains">
       <check card="?" diag="0|0||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="text" slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
       <check card="?" diag="0|1||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="chars" slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </fn>
     <let line="978" var="before" as="xs:string" slot="2" eval="8">
      <fn name="substring-before">
       <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring-before">
        <check card="?" diag="0|0||fn:substring-before">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="text" slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:substring-before">
        <check card="?" diag="0|1||fn:substring-before">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="chars" slot="1"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
      </fn>
      <let line="979" var="after" as="xs:string" slot="3" eval="8">
       <fn name="substring-after">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring-after">
         <check card="?" diag="0|0||fn:substring-after">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="text" slot="0"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:substring-after">
         <check card="?" diag="0|1||fn:substring-after">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="chars" slot="1"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
       <choose line="981">
        <fn name="contains">
         <varRef name="after" slot="3"/>
         <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
          <check card="?" diag="0|1||fn:contains">
           <cvUntyped to="xs:string">
            <data>
             <varRef name="chars" slot="1"/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
        <let line="982" var="before-last" as="document-node()" slot="4" eval="7">
         <doc line="983" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
          <callT name="substring-before-last" bSlot="0">
           <withParam name="Q{}text" flags="c" as="xs:string">
            <varRef line="984" name="after" slot="3"/>
           </withParam>
           <withParam name="Q{}chars" flags="c">
            <varRef line="985" name="chars" slot="1"/>
           </withParam>
          </callT>
         </doc>
         <valueOf line="988">
          <fn name="concat">
           <varRef name="before" slot="2"/>
           <fn name="concat">
            <atomSing card="?" diag="0|0||fn:concat">
             <varRef name="chars" slot="1"/>
            </atomSing>
            <data>
             <varRef name="before-last" slot="4"/>
            </data>
           </fn>
          </fn>
         </valueOf>
        </let>
        <true/>
        <valueOf line="991">
         <varRef name="before" slot="2"/>
        </valueOf>
       </choose>
      </let>
     </let>
     <true/>
     <valueOf line="996">
      <fn name="string-join">
       <convert from="xs:anyAtomicType" to="xs:string">
        <data>
         <mergeAdj>
          <varRef name="text" slot="0"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="18" binds="2 8 26">
  <template name="Q{}header" flags="os" line="226" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <choose role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="229">
    <or op="or">
     <or op="or">
      <fn name="exists">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
       </slash>
      </fn>
      <vc op="ne" onEmpty="1" comp="CCC">
       <fn name="local-name">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
         <dot flags="a"/>
        </treat>
       </fn>
       <str val="Description"/>
      </vc>
     </or>
     <fn name="exists">
      <filter flags="b">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </slash>
       <and op="and">
        <vc op="eq" onEmpty="0" comp="CCC">
         <fn name="namespace-uri">
          <dot type="element()"/>
         </fn>
         <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
        </vc>
        <vc op="eq" onEmpty="0" comp="CCC">
         <fn name="local-name">
          <dot type="element()"/>
         </fn>
         <str val="type"/>
        </vc>
       </and>
      </filter>
     </fn>
    </or>
    <sequence line="230">
     <choose>
      <fn name="exists">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
       </slash>
      </fn>
      <att line="232" name="about">
       <convert from="xs:untypedAtomic" to="xs:string">
        <cast as="xs:untypedAtomic" emptiable="0">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
            </slash>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </cast>
       </convert>
      </att>
     </choose>
     <choose line="235">
      <vc op="ne" onEmpty="1" comp="CCC">
       <fn name="local-name">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
         <dot flags="a"/>
        </treat>
       </fn>
       <str val="Description"/>
      </vc>
      <att line="237" name="typeof">
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <mergeAdj>
           <callT name="curie" bSlot="0">
            <withParam name="Q{}uri" flags="c" as="xs:string">
             <fn line="238" name="concat">
              <fn name="namespace-uri">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:namespace-uri">
                <dot flags="a"/>
               </treat>
              </fn>
              <fn name="local-name">
               <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
                <dot flags="a"/>
               </treat>
              </fn>
             </fn>
            </withParam>
           </callT>
          </mergeAdj>
         </data>
        </convert>
        <str val=""/>
       </fn>
      </att>
     </choose>
     <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="243" name="tr" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
      <elem name="th" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
       <sequence>
        <att name="colspan" flags="l">
         <str val="2"/>
        </att>
        <choose line="244">
         <fn name="exists">
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
          </slash>
         </fn>
         <callT line="245" name="resourceDetailLink" bSlot="1">
          <withParam name="Q{}property" flags="c" as="xs:string">
           <str val="about"/>
          </withParam>
          <withParam name="Q{}namespace" flags="c" as="xs:string">
           <str val=""/>
          </withParam>
          <withParam name="Q{}localname" flags="c" as="attribute()*">
           <slash line="248" simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="((((attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about)) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}aboutEach)) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}aboutEachPrefix)) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}bagID))" jsTest="function a() {function a() {function a() {function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='aboutEach';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='aboutEachPrefix';};return a()||b();};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='bagID';};return a()||b();"/>
           </slash>
          </withParam>
         </callT>
        </choose>
        <callT line="251" name="types" bSlot="2"/>
       </sequence>
      </elem>
     </elem>
    </sequence>
    <true/>
    <att line="257" name="typeof">
     <str val="rdfs:Resource"/>
    </att>
   </choose>
  </template>
 </co>
 <co id="10" vis="PUBLIC" binds="">
  <globalParam name="Q{}language" type="item()*" line="21" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" visibility="PUBLIC" jsAcceptor="return val;" jsCardCheck="function c() {return true;};">
   <doc baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="21" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" flags="t" text="en" validation="preserve">
    <valueOf flags="Sl">
     <str val="en"/>
    </valueOf>
   </doc>
  </globalParam>
 </co>
 <co id="12" binds="27">
  <template name="Q{}get-name" flags="os" line="1039" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="1">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1040">
    <param name="Q{}uri" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <choose line="1042">
     <fn name="contains">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:contains">
       <check card="?" diag="0|0||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="uri" slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <str val="#"/>
     </fn>
     <valueOf line="1043">
      <fn name="substring-after">
       <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring-after">
        <check card="?" diag="0|0||fn:substring-after">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="uri" slot="0"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <str val="#"/>
      </fn>
     </valueOf>
     <true/>
     <callT line="1046" name="substring-after-last" bSlot="0" flags="t">
      <withParam name="Q{}text" flags="c">
       <varRef line="1047" name="uri" slot="0"/>
      </withParam>
      <withParam name="Q{}chars" flags="c" as="xs:string">
       <str val="/"/>
      </withParam>
     </callT>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="2" binds="11 12">
  <template name="Q{}curie" flags="os" line="1070" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="5">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1071">
    <param name="Q{}uri" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <let line="1072" var="namespace" as="document-node()" slot="1" eval="7">
     <doc line="1073" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
      <callT name="get-ns" bSlot="0">
       <withParam name="Q{}uri" flags="c">
        <varRef line="1074" name="uri" slot="0"/>
       </withParam>
      </callT>
     </doc>
     <let line="1083" var="vv:v0" as="xs:string" slot="2" eval="13">
      <cast as="xs:string" emptiable="0">
       <data>
        <varRef name="namespace" slot="1"/>
       </data>
      </cast>
      <let line="1077" var="localname" as="document-node()" slot="3" eval="7">
       <doc line="1078" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
        <callT name="get-name" bSlot="1">
         <withParam name="Q{}uri" flags="c">
          <varRef line="1079" name="uri" slot="0"/>
         </withParam>
        </callT>
       </doc>
       <choose line="1083">
        <fn name="exists">
         <filter flags="b">
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
          </slash>
          <and op="and">
           <vc op="eq" onEmpty="0" comp="CCC">
            <data>
             <dot type="namespace-node()"/>
            </data>
            <varRef name="vv:v0" slot="2"/>
           </vc>
           <fn name="name">
            <dot type="namespace-node()"/>
           </fn>
          </and>
         </filter>
        </fn>
        <let line="1085" var="vv:v1" as="xs:string" slot="4" eval="13">
         <cast as="xs:string" emptiable="0">
          <data>
           <varRef name="namespace" slot="1"/>
          </data>
         </cast>
         <valueOf line="1087">
          <fn line="1085" name="concat">
           <fn name="concat">
            <cast as="xs:untypedAtomic" emptiable="0">
             <fn name="name">
              <check card="?" diag="0|0||fn:name">
               <filter flags="b">
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
                </slash>
                <and op="and">
                 <vc op="eq" onEmpty="0" comp="CCC">
                  <data>
                   <dot type="namespace-node()"/>
                  </data>
                  <varRef name="vv:v1" slot="4"/>
                 </vc>
                 <fn name="name">
                  <dot type="namespace-node()"/>
                 </fn>
                </and>
               </filter>
              </check>
             </fn>
            </cast>
            <str val=":"/>
           </fn>
           <data line="1087">
            <varRef name="localname" slot="3"/>
           </data>
          </fn>
         </valueOf>
        </let>
        <vc line="1089" op="eq" onEmpty="0" comp="CCC">
         <cast as="xs:string" emptiable="0">
          <data>
           <varRef name="namespace" slot="1"/>
          </data>
         </cast>
         <str val="http://www.w3.org/2001/XMLSchema#"/>
        </vc>
        <valueOf line="1090">
         <fn name="concat">
          <str val="xsd:"/>
          <data>
           <varRef name="localname" slot="3"/>
          </data>
         </fn>
        </valueOf>
        <fn line="1092" name="exists">
         <filter flags="b">
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|8|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
          </slash>
          <fn name="not">
           <fn name="name">
            <dot type="namespace-node()"/>
           </fn>
          </fn>
         </filter>
        </fn>
        <valueOf line="1093">
         <fn name="concat">
          <str val="base:"/>
          <data>
           <varRef name="localname" slot="3"/>
          </data>
         </fn>
        </valueOf>
        <true/>
        <valueOf line="1096">
         <fn name="concat">
          <fn name="concat">
           <fn name="generate-id">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:generate-id">
             <dot flags="a"/>
            </treat>
           </fn>
           <str val=":"/>
          </fn>
          <data>
           <varRef name="localname" slot="3"/>
          </data>
         </fn>
        </valueOf>
       </choose>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="27" binds="27">
  <template name="Q{}substring-after-last" flags="os" line="956" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="2">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="957">
    <param name="Q{}text" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="958" name="Q{}chars" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <choose line="960">
     <fn name="contains">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:contains">
       <check card="?" diag="0|0||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="text" slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
       <check card="?" diag="0|1||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="chars" slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </fn>
     <callT line="962" name="substring-after-last" bSlot="0" flags="t">
      <withParam name="Q{}text" flags="c" as="xs:string">
       <fn line="961" name="substring-after">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring-after">
         <check card="?" diag="0|0||fn:substring-after">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="text" slot="0"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:substring-after">
         <check card="?" diag="0|1||fn:substring-after">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="chars" slot="1"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
      </withParam>
      <withParam name="Q{}chars" flags="c">
       <varRef line="964" name="chars" slot="1"/>
      </withParam>
     </callT>
     <true/>
     <valueOf line="968">
      <fn name="string-join">
       <convert from="xs:anyAtomicType" to="xs:string">
        <data>
         <mergeAdj>
          <varRef name="text" slot="0"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="26" binds="21 8 6">
  <template name="Q{}types" flags="os" line="263" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="265">
    <choose>
     <and op="and">
      <fn name="exists">
       <slash simple="1">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
         <dot flags="a"/>
        </treat>
        <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
       </slash>
      </fn>
      <or op="or">
       <vc op="ne" onEmpty="1" comp="CCC">
        <fn name="local-name">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
          <dot flags="a"/>
         </treat>
        </fn>
        <str val="Description"/>
       </vc>
       <fn name="exists">
        <filter flags="b">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <fn name="namespace-uri">
            <dot type="element()"/>
           </fn>
           <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
          </vc>
          <vc op="eq" onEmpty="0" comp="CCC">
           <fn name="local-name">
            <dot type="element()"/>
           </fn>
           <str val="type"/>
          </vc>
         </and>
        </filter>
       </fn>
      </or>
     </and>
     <elem line="266" name="div" nsuri="" namespaces="rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="connector"/>
       </att>
       <valueOf flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <gVarRef name="Q{}isA" bSlot="0"/>
         </data>
        </convert>
       </valueOf>
      </sequence>
     </elem>
    </choose>
    <choose line="269">
     <vc op="ne" onEmpty="1" comp="CCC">
      <fn name="local-name">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
        <dot flags="a"/>
       </treat>
      </fn>
      <str val="Description"/>
     </vc>
     <sequence line="270">
      <callT name="resourceDetailLink" bSlot="1">
       <withParam name="Q{}property" flags="c" as="xs:string">
        <str val="type"/>
       </withParam>
       <withParam name="Q{}namespace" flags="c" as="xs:anyURI">
        <fn line="272" name="namespace-uri">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:namespace-uri">
          <dot flags="a"/>
         </treat>
        </fn>
       </withParam>
       <withParam name="Q{}localname" flags="c" as="xs:string">
        <fn line="273" name="local-name">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
          <dot flags="a"/>
         </treat>
        </fn>
       </withParam>
      </callT>
      <choose line="275">
       <fn name="exists">
        <filter flags="b">
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </slash>
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <fn name="namespace-uri">
            <dot type="element()"/>
           </fn>
           <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
          </vc>
          <vc op="eq" onEmpty="0" comp="CCC">
           <fn name="local-name">
            <dot type="element()"/>
           </fn>
           <str val="type"/>
          </vc>
         </and>
        </filter>
       </fn>
       <valueOf>
        <str val=", "/>
       </valueOf>
      </choose>
     </sequence>
    </choose>
    <forEach line="280">
     <filter flags="b">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </slash>
      <and op="and">
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="namespace-uri">
         <dot type="element()"/>
        </fn>
        <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
       </vc>
       <vc op="eq" onEmpty="0" comp="CCC">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <str val="type"/>
       </vc>
      </and>
     </filter>
     <sequence ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="281">
      <elem name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
       <sequence>
        <att name="rel" flags="l">
         <str val="rdf:type"/>
        </att>
        <att name="class" flags="l">
         <str val="connector"/>
        </att>
        <callT line="282" name="property-objects" bSlot="2"/>
       </sequence>
      </elem>
      <choose ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="284">
       <fn name="exists">
        <filter flags="b">
         <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <and op="and">
          <vc op="eq" onEmpty="0" comp="CCC">
           <fn name="namespace-uri">
            <dot type="element()"/>
           </fn>
           <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
          </vc>
          <vc op="eq" onEmpty="0" comp="CCC">
           <fn name="local-name">
            <dot type="element()"/>
           </fn>
           <str val="type"/>
          </vc>
         </and>
        </filter>
       </fn>
       <elem line="285" name="div" nsuri="" namespaces="rdf rdfs">
        <sequence>
         <att name="class" flags="l">
          <str val="connector"/>
         </att>
         <valueOf flags="l">
          <str val=", "/>
         </valueOf>
        </sequence>
       </elem>
      </choose>
     </sequence>
    </forEach>
   </sequence>
  </template>
 </co>
 <co id="4" binds="28 28 28">
  <template name="Q{}textDetailLink" flags="os" line="920" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="5">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="921">
    <param name="Q{}property" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="922" name="Q{}value" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <choose line="924">
     <or op="or">
      <fn name="starts-with">
       <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:starts-with">
        <check card="?" diag="0|0||fn:starts-with">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="value" slot="1"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <str val="http://"/>
      </fn>
      <fn name="starts-with">
       <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:starts-with">
        <check card="?" diag="0|0||fn:starts-with">
         <cvUntyped to="xs:string">
          <data>
           <varRef name="value" slot="1"/>
          </data>
         </cvUntyped>
        </check>
       </treat>
       <str val="https://"/>
      </fn>
     </or>
     <let line="925" var="linkTextPrePre" as="document-node()" slot="2" eval="7">
      <doc line="926" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
       <callT name="replace-string" bSlot="0">
        <withParam name="Q{}text" flags="c">
         <varRef line="927" name="value" slot="1"/>
        </withParam>
        <withParam name="Q{}replace" flags="c" as="xs:string">
         <str val="_"/>
        </withParam>
        <withParam name="Q{}with" flags="c" as="xs:string">
         <str val=" "/>
        </withParam>
       </callT>
      </doc>
      <let line="932" var="linkTextPre" as="document-node()" slot="3" eval="7">
       <doc line="933" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
        <callT name="replace-string" bSlot="1">
         <withParam name="Q{}text" flags="c" as="document-node()">
          <varRef line="934" name="linkTextPrePre" slot="2"/>
         </withParam>
         <withParam name="Q{}replace" flags="c" as="xs:string">
          <str val="/"/>
         </withParam>
         <withParam name="Q{}with" flags="c" as="xs:string">
          <str val="/ "/>
         </withParam>
        </callT>
       </doc>
       <let line="939" var="linkText" as="document-node()" slot="4" eval="7">
        <doc line="940" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
         <callT name="replace-string" bSlot="2">
          <withParam name="Q{}text" flags="c" as="document-node()">
           <varRef line="941" name="linkTextPre" slot="3"/>
          </withParam>
          <withParam name="Q{}replace" flags="c" as="xs:string">
           <str val="/ / "/>
          </withParam>
          <withParam name="Q{}with" flags="c" as="xs:string">
           <str val="//"/>
          </withParam>
         </callT>
        </doc>
        <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="946" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
         <sequence>
          <att name="class" flags="l">
           <str val="browse"/>
          </att>
          <att name="href" flags="l">
           <fn name="string-join">
            <convert from="xs:anyAtomicType" to="xs:string">
             <data>
              <mergeAdj>
               <varRef name="value" slot="1"/>
              </mergeAdj>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="title" flags="l">
           <fn name="concat">
            <str val="Browse "/>
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <varRef name="value" slot="1"/>
               </mergeAdj>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </fn>
          </att>
          <valueOf line="947" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <varRef name="linkText" slot="4"/>
            </data>
           </convert>
          </valueOf>
         </sequence>
        </elem>
       </let>
      </let>
     </let>
     <true/>
     <valueOf line="951">
      <fn name="string-join">
       <convert from="xs:anyAtomicType" to="xs:string">
        <data>
         <dot flags="a"/>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="8" binds="9 28 28 28 28 22">
  <template name="Q{}resourceDetailLink" flags="os" line="840" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="9">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="841">
    <param name="Q{}property" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="842" name="Q{}namespace" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <param line="843" name="Q{}localname" slot="2">
     <str role="select" val=""/>
     <supplied role="conversion" slot="2"/>
    </param>
    <let line="844" var="uri" as="document-node()" slot="3" eval="7">
     <doc line="845" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" flags="t" validation="preserve">
      <valueOf flags="l">
       <fn name="concat">
        <atomSing card="?" diag="0|0||fn:concat">
         <varRef name="namespace" slot="1"/>
        </atomSing>
        <atomSing card="?" diag="0|1||fn:concat">
         <varRef name="localname" slot="2"/>
        </atomSing>
       </fn>
      </valueOf>
     </doc>
     <let line="847" var="linkName" as="document-node()" slot="4" eval="7">
      <doc line="848" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
       <callT name="getLabel" bSlot="0">
        <withParam name="Q{}uri" flags="c" as="document-node()">
         <varRef line="849" name="uri" slot="3"/>
        </withParam>
        <withParam name="Q{}property" flags="c">
         <varRef line="850" name="property" slot="0"/>
        </withParam>
       </callT>
      </doc>
      <let line="853" var="escaped-uri" as="document-node()" slot="5" eval="7">
       <doc line="854" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
        <callT name="replace-string" bSlot="1">
         <withParam name="Q{}text" flags="c" as="document-node()">
          <varRef line="855" name="uri" slot="3"/>
         </withParam>
         <withParam name="Q{}replace" flags="c" as="xs:string">
          <str val="#"/>
         </withParam>
         <withParam name="Q{}with" flags="c" as="xs:string">
          <str val="%23"/>
         </withParam>
        </callT>
       </doc>
       <let line="860" var="linkTextPrePre" as="document-node()" slot="6" eval="7">
        <doc line="861" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
         <callT name="replace-string" bSlot="2">
          <withParam name="Q{}text" flags="c" as="document-node()">
           <varRef line="862" name="linkName" slot="4"/>
          </withParam>
          <withParam name="Q{}replace" flags="c" as="xs:string">
           <str val="_"/>
          </withParam>
          <withParam name="Q{}with" flags="c" as="xs:string">
           <str val=" "/>
          </withParam>
         </callT>
        </doc>
        <let line="867" var="linkTextPre" as="document-node()" slot="7" eval="7">
         <doc line="869" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
          <choose>
           <fn name="contains">
            <cvUntyped to="xs:string">
             <data>
              <varRef name="linkTextPrePre" slot="6"/>
             </data>
            </cvUntyped>
            <str val="://"/>
           </fn>
           <callT line="870" name="replace-string" bSlot="3">
            <withParam name="Q{}text" flags="c" as="document-node()">
             <varRef line="871" name="linkTextPrePre" slot="6"/>
            </withParam>
            <withParam name="Q{}replace" flags="c" as="xs:string">
             <str val="/"/>
            </withParam>
            <withParam name="Q{}with" flags="c" as="xs:string">
             <str val="/ "/>
            </withParam>
           </callT>
           <true/>
           <valueOf line="877" flags="l">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <varRef name="linkTextPrePre" slot="6"/>
             </data>
            </convert>
           </valueOf>
          </choose>
         </doc>
         <let line="881" var="linkText" as="document-node()" slot="8" eval="7">
          <doc line="882" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
           <callT name="replace-string" bSlot="4">
            <withParam name="Q{}text" flags="c" as="document-node()">
             <varRef line="883" name="linkTextPre" slot="7"/>
            </withParam>
            <withParam name="Q{}replace" flags="c" as="xs:string">
             <str val="/ / "/>
            </withParam>
            <withParam name="Q{}with" flags="c" as="xs:string">
             <str val="//"/>
            </withParam>
           </callT>
          </doc>
          <choose line="896">
           <and op="and">
            <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <gVarRef name="Q{}mode" bSlot="5"/>
             </data>
             <str val="rhizomer"/>
            </gc>
            <gc op="!=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
             <data>
              <varRef name="property" slot="0"/>
             </data>
             <str val="about"/>
            </gc>
           </and>
           <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="899" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
            <sequence>
             <att name="class" flags="l">
              <str val="describe"/>
             </att>
             <att name="href" flags="l">
              <fn name="concat">
               <str val="?query=DESCRIBE%20&lt;"/>
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <varRef name="escaped-uri" slot="5"/>
                </data>
               </convert>
               <str val="&gt;"/>
              </fn>
             </att>
             <att name="onclick" flags="l">
              <fn name="concat">
               <str val="javascript:rhz.describeResource('"/>
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <varRef name="uri" slot="3"/>
                </data>
               </convert>
               <str val="'); return false;"/>
              </fn>
             </att>
             <att name="title" flags="l">
              <fn name="concat">
               <str val="Describe "/>
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <varRef name="uri" slot="3"/>
                </data>
               </convert>
              </fn>
             </att>
             <choose line="900">
              <gc op="!=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
               <data>
                <varRef name="property" slot="0"/>
               </data>
               <str val=""/>
              </gc>
              <att line="902" name="resource" flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <varRef name="uri" slot="3"/>
                </data>
               </convert>
              </att>
             </choose>
             <valueOf line="905" flags="l">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <varRef name="linkText" slot="8"/>
               </data>
              </convert>
             </valueOf>
            </sequence>
           </elem>
           <true/>
           <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="909" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
            <sequence>
             <att name="class" flags="l">
              <str val="browse"/>
             </att>
             <att name="href" flags="l">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <varRef name="uri" slot="3"/>
               </data>
              </convert>
             </att>
             <att name="title" flags="l">
              <fn name="concat">
               <str val="Browse "/>
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <varRef name="uri" slot="3"/>
                </data>
               </convert>
              </fn>
             </att>
             <valueOf line="910" flags="l">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <varRef name="linkText" slot="8"/>
               </data>
              </convert>
             </valueOf>
            </sequence>
           </elem>
          </choose>
         </let>
        </let>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="28" binds="28">
  <template name="Q{}replace-string" flags="os" line="1001" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="3">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1002">
    <param name="Q{}text" slot="0">
     <str role="select" val=""/>
     <supplied role="conversion" slot="0"/>
    </param>
    <param line="1003" name="Q{}replace" slot="1">
     <str role="select" val=""/>
     <supplied role="conversion" slot="1"/>
    </param>
    <param line="1004" name="Q{}with" slot="2">
     <str role="select" val=""/>
     <supplied role="conversion" slot="2"/>
    </param>
    <choose line="1006">
     <fn name="contains">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:contains">
       <check card="?" diag="0|0||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="text" slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:contains">
       <check card="?" diag="0|1||fn:contains">
        <cvUntyped to="xs:string">
         <data>
          <varRef name="replace" slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </fn>
     <sequence line="1007">
      <valueOf>
       <fn name="substring-before">
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring-before">
         <check card="?" diag="0|0||fn:substring-before">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="text" slot="0"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
        <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:substring-before">
         <check card="?" diag="0|1||fn:substring-before">
          <cvUntyped to="xs:string">
           <data>
            <varRef name="replace" slot="1"/>
           </data>
          </cvUntyped>
         </check>
        </treat>
       </fn>
      </valueOf>
      <valueOf line="1008">
       <fn name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <mergeAdj>
           <varRef name="with" slot="2"/>
          </mergeAdj>
         </data>
        </convert>
        <str val=" "/>
       </fn>
      </valueOf>
      <callT line="1009" name="replace-string" bSlot="0" flags="t">
       <withParam name="Q{}text" flags="c" as="xs:string">
        <fn line="1010" name="substring-after">
         <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:substring-after">
          <check card="?" diag="0|0||fn:substring-after">
           <cvUntyped to="xs:string">
            <data>
             <varRef name="text" slot="0"/>
            </data>
           </cvUntyped>
          </check>
         </treat>
         <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|1||fn:substring-after">
          <check card="?" diag="0|1||fn:substring-after">
           <cvUntyped to="xs:string">
            <data>
             <varRef name="replace" slot="1"/>
            </data>
           </cvUntyped>
          </check>
         </treat>
        </fn>
       </withParam>
       <withParam name="Q{}replace" flags="c">
        <varRef line="1011" name="replace" slot="1"/>
       </withParam>
       <withParam name="Q{}with" flags="c">
        <varRef line="1012" name="with" slot="2"/>
       </withParam>
      </callT>
     </sequence>
     <true/>
     <valueOf line="1016">
      <fn name="string-join">
       <convert from="xs:anyAtomicType" to="xs:string">
        <data>
         <mergeAdj>
          <varRef name="text" slot="0"/>
         </mergeAdj>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </choose>
   </sequence>
  </template>
 </co>
 <co id="17" binds="17">
  <mode name="Q{}copy-subtree" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="1101" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1103" flags="cin">
     <applyT role="content" mode="Q{}copy-subtree" bSlot="0">
      <union role="select" op="|">
       <sequence>
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </sequence>
       <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
      </union>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="1101" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1103" flags="cin">
     <applyT role="content" mode="Q{}copy-subtree" bSlot="0">
      <union role="select" op="|">
       <sequence>
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </sequence>
       <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
      </union>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="1101" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl">
    <p.nodeTest role="match" test="text()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===3;"/>
    <copy role="action" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="1103" flags="cin">
     <applyT role="content" mode="Q{}copy-subtree" bSlot="0">
      <union role="select" op="|">
       <sequence>
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </sequence>
       <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
      </union>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="16" binds="2 3 4 6 6 5 16">
  <template name="Q{}ListItems" flags="os" line="373" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="3">
   <elem role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="374" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
    <sequence>
     <att name="typeof" flags="l">
      <str val="rdf:List"/>
     </att>
     <elem line="375" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="list-object"/>
       </att>
       <choose line="377">
        <and op="and">
         <and op="and">
          <fn name="exists">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
           </slash>
          </fn>
          <fn name="empty">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
          </fn>
         </and>
         <fn name="empty">
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
          </slash>
         </fn>
        </and>
        <sequence line="379">
         <att name="property" flags="l">
          <str val="rdf:first"/>
         </att>
         <att line="382" name="content" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <cast as="xs:untypedAtomic" emptiable="0">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <dot flags="a"/>
              </data>
             </convert>
             <str val=" "/>
            </fn>
           </cast>
          </convert>
         </att>
         <choose line="384">
          <fn name="exists">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
           </slash>
          </fn>
          <att line="386" name="xml:lang" nsuri="http://www.w3.org/XML/1998/namespace" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <cast as="xs:untypedAtomic" emptiable="0">
             <fn name="string">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
                </slash>
               </data>
              </convert>
             </fn>
            </cast>
           </convert>
          </att>
         </choose>
         <choose line="389">
          <fn name="exists">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
           </slash>
          </fn>
          <sequence line="391">
           <att name="datatype" flags="l">
            <fn name="string-join">
             <convert from="xs:anyAtomicType" to="xs:string">
              <data>
               <mergeAdj>
                <callT name="curie" bSlot="0">
                 <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                  <slash line="392" simple="1">
                   <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                    <dot flags="a"/>
                   </treat>
                   <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                  </slash>
                 </withParam>
                </callT>
               </mergeAdj>
              </data>
             </convert>
             <str val=""/>
            </fn>
           </att>
           <let line="395" var="datatype-xmlns" as="document-node()" slot="0" eval="7">
            <doc line="396" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
             <callT name="xmlns" bSlot="1">
              <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
               <slash line="397" simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
               </slash>
              </withParam>
             </callT>
            </doc>
            <copyOf line="400" flags="vc">
             <slash>
              <slash simple="1">
               <varRef name="datatype-xmlns" slot="0"/>
               <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
              </slash>
              <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
             </slash>
            </copyOf>
           </let>
          </sequence>
         </choose>
         <callT line="402" name="textDetailLink" bSlot="2">
          <withParam name="Q{}property" flags="c" as="xs:string">
           <str val="first"/>
          </withParam>
          <withParam name="Q{}value" flags="c" as="item()">
           <dot line="404" flags="a"/>
          </withParam>
         </callT>
        </sequence>
        <let line="410" var="vv:cc-1157019236" as="xs:untypedAtomic?" slot="1" eval="13">
         <data>
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
          </slash>
         </data>
         <or op="or">
          <gc op="=" card="1:1" comp="CCC">
           <varRef name="vv:cc-1157019236" slot="1"/>
           <str val="Literal"/>
          </gc>
          <and op="and">
           <fn name="empty">
            <slash simple="1">
             <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
              <dot flags="a"/>
             </treat>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
           </fn>
           <and op="and">
            <and op="and">
             <fn name="not">
              <fn name="exists">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}resource)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='resource';"/>
               </slash>
              </fn>
             </fn>
             <fn name="not">
              <fn name="exists">
               <slash simple="1">
                <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                 <dot flags="a"/>
                </treat>
                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}nodeID)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='nodeID';"/>
               </slash>
              </fn>
             </fn>
            </and>
            <fn name="not">
             <gc op="=" card="1:1" comp="CCC">
              <varRef name="vv:cc-1157019236" slot="1"/>
              <str val="Resource"/>
             </gc>
            </fn>
           </and>
          </and>
         </or>
        </let>
        <sequence line="412">
         <att name="property" flags="l">
          <str val="rdf:first"/>
         </att>
         <callT line="414" name="property-objects" bSlot="3"/>
        </sequence>
        <true/>
        <sequence line="418">
         <att name="rel" flags="l">
          <str val="rdf:first"/>
         </att>
         <callT line="420" name="property-objects" bSlot="4"/>
        </sequence>
       </choose>
      </sequence>
     </elem>
     <elem line="426" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="list-object"/>
       </att>
       <att name="rel" flags="l">
        <str val="rdf:rest"/>
       </att>
       <choose line="428">
        <fn name="exists">
         <slash>
          <slash>
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|9|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
           </slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}rest)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='rest';"/>
          </slash>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}first)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='first';"/>
         </slash>
        </fn>
        <let line="430" var="vv:cc1213008577" as="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}rest)*" slot="2" eval="4">
         <slash>
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|9|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="parent" nodeTest="(document-node()|element())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
          </slash>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}rest)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='rest';"/>
         </slash>
         <sequence line="429">
          <callT name="connector" bSlot="5">
           <withParam name="Q{}criteria" flags="c" as="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}first)*">
            <slash line="430">
             <varRef name="vv:cc1213008577" slot="2"/>
             <axis name="descendant" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}first)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='first';"/>
            </slash>
           </withParam>
          </callT>
          <forEach line="432">
           <slash>
            <varRef name="vv:cc1213008577" slot="2"/>
            <first>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}first)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='first';"/>
            </first>
           </slash>
           <callT line="433" name="ListItems" bSlot="6"/>
          </forEach>
         </sequence>
        </let>
        <true/>
        <att line="437" name="resource" flags="l">
         <str val="[rdf:nil]"/>
        </att>
       </choose>
      </sequence>
     </elem>
    </sequence>
   </elem>
  </template>
 </co>
 <co id="29" binds="22 30 18 19 20 22 23">
  <template name="Q{}rdfDescription" flags="os" line="110" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <choose role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="115">
    <or op="or">
     <or op="or">
      <and op="and">
       <fn name="empty">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|7|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </fn>
       <fn name="empty">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|11|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="preceding-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
       </fn>
      </and>
      <vc op="ne" onEmpty="1" comp="CCC">
       <fn name="local-name">
        <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:local-name">
         <dot flags="a"/>
        </treat>
       </fn>
       <str val="Description"/>
      </vc>
     </or>
     <fn name="exists">
      <sequence>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <and op="and">
         <vc op="ne" onEmpty="1" comp="CCC">
          <fn name="name">
           <dot type="element()"/>
          </fn>
          <str val="http://www.w3.org/2000/01/rdf-schema#"/>
         </vc>
         <vc op="ne" onEmpty="1" comp="CCC">
          <fn name="local-name">
           <dot type="element()"/>
          </fn>
          <str val="label"/>
         </vc>
        </and>
       </filter>
       <filter flags="b">
        <slash simple="1">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
          <dot flags="a"/>
         </treat>
         <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        </slash>
        <and op="and">
         <vc op="ne" onEmpty="1" comp="CCC">
          <fn name="namespace-uri">
           <dot type="attribute()"/>
          </fn>
          <str val="http://www.w3.org/2000/01/rdf-schema#"/>
         </vc>
         <and op="and">
          <vc op="ne" onEmpty="1" comp="CCC">
           <fn name="local-name">
            <dot type="attribute()"/>
           </fn>
           <str val="label"/>
          </vc>
          <vc op="ne" onEmpty="1" comp="CCC">
           <fn name="local-name">
            <dot type="attribute()"/>
           </fn>
           <str val="about"/>
          </vc>
         </and>
        </and>
       </filter>
      </sequence>
     </fn>
    </or>
    <sequence line="116">
     <choose>
      <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
       <data>
        <gVarRef name="Q{}mode" bSlot="0"/>
       </data>
       <str val="rhizomer"/>
      </gc>
      <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="117" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
       <sequence>
        <att name="class" flags="l">
         <str val="edition"/>
        </att>
        <elem name="span" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
         <empty/>
        </elem>
        <callT name="rdfDescriptionEdition" bSlot="1"/>
       </sequence>
      </elem>
     </choose>
     <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="119" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
      <sequence>
       <att name="class" flags="l">
        <str val="description"/>
       </att>
       <elem line="121" name="table" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
        <sequence>
         <choose>
          <fn name="exists">
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
           </slash>
          </fn>
          <att line="123" name="about" flags="l">
           <convert from="xs:untypedAtomic" to="xs:string">
            <cast as="xs:untypedAtomic" emptiable="0">
             <fn name="string-join">
              <convert from="xs:untypedAtomic" to="xs:string">
               <data>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
                </slash>
               </data>
              </convert>
              <str val=" "/>
             </fn>
            </cast>
           </convert>
          </att>
         </choose>
         <callT line="126" name="header" bSlot="2"/>
         <callT line="127" name="attributes" bSlot="3"/>
         <callT line="128" name="properties" bSlot="4"/>
         <choose line="129">
          <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
           <data>
            <gVarRef name="Q{}mode" bSlot="5"/>
           </data>
           <str val="rhizomer"/>
          </gc>
          <elem line="130" name="tr" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
           <elem name="td" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
            <sequence>
             <att name="class" flags="l">
              <str val="actions"/>
             </att>
             <att name="colspan" flags="l">
              <str val="2"/>
             </att>
             <callT name="rdfDescriptionActions" bSlot="6"/>
            </sequence>
           </elem>
          </elem>
         </choose>
        </sequence>
       </elem>
      </sequence>
     </elem>
    </sequence>
   </choose>
  </template>
 </co>
 <co id="20" binds="2 1 8 2 3 4 5 2 3 4 5 2 3 8 6 6 6 5 6 5">
  <template name="Q{}properties" flags="os" line="454" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="25">
   <forEach role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="455">
    <sort>
     <filter role="select" flags="b">
      <slash simple="1">
       <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
        <dot flags="a"/>
       </treat>
       <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
      </slash>
      <or op="or">
       <vc op="ne" onEmpty="1" comp="CCC">
        <fn name="namespace-uri">
         <dot type="element()"/>
        </fn>
        <str val="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
       </vc>
       <vc op="ne" onEmpty="1" comp="CCC">
        <fn name="local-name">
         <dot type="element()"/>
        </fn>
        <str val="type"/>
       </vc>
      </or>
     </filter>
     <sortKey line="456" comp="CCC">
      <fn role="select" name="local-name">
       <dot type="element()"/>
      </fn>
      <str role="order" val="ascending"/>
      <str role="lang" val=""/>
      <str role="caseOrder" val="#default"/>
      <str role="stable" val="yes"/>
      <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
     </sortKey>
    </sort>
    <let line="457" var="property-name" as="xs:untypedAtomic" slot="0" eval="7">
     <cast line="458" as="xs:untypedAtomic" emptiable="0">
      <fn name="local-name">
       <dot type="element()"/>
      </fn>
     </cast>
     <let line="589" var="vv:v9" as="xs:string" slot="1" eval="13">
      <cast as="xs:string" emptiable="0">
       <varRef name="property-name" slot="0"/>
      </cast>
      <let line="460" var="property-namespace" as="xs:untypedAtomic" slot="2" eval="8">
       <convert line="461" from="xs:anyURI" to="xs:untypedAtomic">
        <fn name="namespace-uri">
         <dot type="element()"/>
        </fn>
       </convert>
       <let line="589" var="vv:v10" as="xs:anyURI" slot="3" eval="13">
        <cast as="xs:anyURI" emptiable="0">
         <varRef name="property-namespace" slot="2"/>
        </cast>
        <let line="463" var="propertyCurie" as="document-node()" slot="4" eval="7">
         <doc line="464" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
          <callT name="curie" bSlot="0">
           <withParam name="Q{}uri" flags="c" as="xs:string">
            <fn line="465" name="concat">
             <fn name="namespace-uri">
              <dot type="element()"/>
             </fn>
             <fn name="local-name">
              <dot type="element()"/>
             </fn>
            </fn>
           </withParam>
          </callT>
         </doc>
         <choose line="470">
          <and op="and">
           <and op="and">
            <fn name="exists">
             <axis name="child" nodeTest="text()" jsTest="return item.nodeType===3;"/>
            </fn>
            <fn name="empty">
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </fn>
           </and>
           <fn name="empty">
            <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='parseType';"/>
           </fn>
          </and>
          <let line="471" var="isPreferredLanguage" as="document-node()" slot="5" eval="7">
           <doc line="472" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
            <callT name="isPreferredLanguage" bSlot="1"/>
           </doc>
           <choose line="476">
            <vc op="eq" onEmpty="0" comp="CCC">
             <cast as="xs:string" emptiable="0">
              <data>
               <varRef name="isPreferredLanguage" slot="5"/>
              </data>
             </cast>
             <str val="true"/>
            </vc>
            <let line="479" var="vv:v1" as="xs:anyURI" slot="6" eval="13">
             <cast as="xs:anyURI" emptiable="0">
              <varRef name="property-namespace" slot="2"/>
             </cast>
             <let var="vv:v0" as="xs:string" slot="7" eval="13">
              <cast as="xs:string" emptiable="0">
               <varRef name="property-name" slot="0"/>
              </cast>
              <choose>
               <fn name="exists">
                <filter flags="b">
                 <slash simple="1">
                  <dot type="element()"/>
                  <axis name="preceding-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                 </slash>
                 <and op="and">
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <fn name="local-name">
                    <dot type="element()"/>
                   </fn>
                   <varRef name="vv:v0" slot="7"/>
                  </vc>
                  <vc op="eq" onEmpty="0" comp="CCC">
                   <fn name="namespace-uri">
                    <dot type="element()"/>
                   </fn>
                   <varRef name="vv:v1" slot="6"/>
                  </vc>
                 </and>
                </filter>
               </fn>
               <empty/>
               <true/>
               <let ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="553" var="vv:v8" as="xs:anyURI" slot="8" eval="13">
                <cast as="xs:anyURI" emptiable="0">
                 <varRef name="property-namespace" slot="2"/>
                </cast>
                <let var="vv:v7" as="xs:string" slot="9" eval="13">
                 <cast as="xs:string" emptiable="0">
                  <varRef name="property-name" slot="0"/>
                 </cast>
                 <let line="524" var="vv:v6" as="xs:string" slot="10" eval="13">
                  <convert from="xs:untypedAtomic" to="xs:string">
                   <data>
                    <varRef name="propertyCurie" slot="4"/>
                   </data>
                  </convert>
                  <let line="522" var="vv:v5" as="xs:anyURI" slot="11" eval="13">
                   <cast as="xs:anyURI" emptiable="0">
                    <varRef name="property-namespace" slot="2"/>
                   </cast>
                   <let var="vv:v4" as="xs:string" slot="12" eval="13">
                    <cast as="xs:string" emptiable="0">
                     <varRef name="property-name" slot="0"/>
                    </cast>
                    <let line="519" var="vv:v3" as="xs:anyURI" slot="13" eval="13">
                     <cast as="xs:anyURI" emptiable="0">
                      <varRef name="property-namespace" slot="2"/>
                     </cast>
                     <let var="vv:v2" as="xs:string" slot="14" eval="13">
                      <cast as="xs:string" emptiable="0">
                       <varRef name="property-name" slot="0"/>
                      </cast>
                      <elem line="483" name="tr" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
                       <sequence>
                        <att name="class" flags="l">
                         <fn name="concat">
                          <convert from="xs:untypedAtomic" to="xs:string">
                           <varRef name="property-namespace" slot="2"/>
                          </convert>
                          <convert from="xs:untypedAtomic" to="xs:string">
                           <varRef name="property-name" slot="0"/>
                          </convert>
                         </fn>
                        </att>
                        <elem line="485" name="td" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                         <callT name="resourceDetailLink" bSlot="2">
                          <withParam name="Q{}property" flags="c" as="xs:string">
                           <str val=""/>
                          </withParam>
                          <withParam name="Q{}namespace" flags="c" as="xs:anyURI">
                           <fn line="487" name="namespace-uri">
                            <dot type="element()"/>
                           </fn>
                          </withParam>
                          <withParam name="Q{}localname" flags="c" as="xs:string">
                           <fn line="488" name="local-name">
                            <dot type="element()"/>
                           </fn>
                          </withParam>
                         </callT>
                        </elem>
                        <elem line="491" name="td" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                         <sequence>
                          <att name="property" flags="l">
                           <convert from="xs:untypedAtomic" to="xs:string">
                            <data>
                             <varRef name="propertyCurie" slot="4"/>
                            </data>
                           </convert>
                          </att>
                          <att name="content" flags="l">
                           <convert from="xs:untypedAtomic" to="xs:string">
                            <data>
                             <dot type="element()"/>
                            </data>
                           </convert>
                          </att>
                          <choose line="492">
                           <fn name="exists">
                            <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
                           </fn>
                           <att line="494" name="xml:lang" nsuri="http://www.w3.org/XML/1998/namespace" flags="l">
                            <convert from="xs:untypedAtomic" to="xs:string">
                             <cast as="xs:untypedAtomic" emptiable="0">
                              <fn name="string">
                               <convert from="xs:untypedAtomic" to="xs:string">
                                <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
                               </convert>
                              </fn>
                             </cast>
                            </convert>
                           </att>
                          </choose>
                          <choose line="497">
                           <fn name="exists">
                            <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                           </fn>
                           <sequence line="499">
                            <att name="datatype" flags="l">
                             <fn name="string-join">
                              <convert from="xs:anyAtomicType" to="xs:string">
                               <data>
                                <mergeAdj>
                                 <callT name="curie" bSlot="3">
                                  <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                                   <axis line="500" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                                  </withParam>
                                 </callT>
                                </mergeAdj>
                               </data>
                              </convert>
                              <str val=""/>
                             </fn>
                            </att>
                            <let line="503" var="datatype-xmlns" as="document-node()" slot="15" eval="7">
                             <doc line="504" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
                              <callT name="xmlns" bSlot="4">
                               <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                                <axis line="505" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                               </withParam>
                              </callT>
                             </doc>
                             <copyOf line="508" flags="vc">
                              <slash>
                               <slash simple="1">
                                <varRef name="datatype-xmlns" slot="15"/>
                                <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                               </slash>
                               <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
                              </slash>
                             </copyOf>
                            </let>
                           </sequence>
                          </choose>
                          <elem line="511" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                           <sequence>
                            <att name="class" flags="l">
                             <str val="property-object"/>
                            </att>
                            <callT line="512" name="textDetailLink" bSlot="5">
                             <withParam name="Q{}property" flags="c" as="xs:string">
                              <fn line="513" name="local-name">
                               <dot type="element()"/>
                              </fn>
                             </withParam>
                             <withParam name="Q{}value" flags="c" as="item()">
                              <dot line="514" type="element()"/>
                             </withParam>
                            </callT>
                           </sequence>
                          </elem>
                          <callT line="517" name="connector" bSlot="6">
                           <withParam name="Q{}criteria" flags="c" as="element()*">
                            <filter line="519" flags="b">
                             <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                             <and op="and">
                              <vc op="eq" onEmpty="0" comp="CCC">
                               <fn name="local-name">
                                <dot type="element()"/>
                               </fn>
                               <varRef name="vv:v2" slot="14"/>
                              </vc>
                              <vc op="eq" onEmpty="0" comp="CCC">
                               <fn name="namespace-uri">
                                <dot type="element()"/>
                               </fn>
                               <varRef name="vv:v3" slot="13"/>
                              </vc>
                             </and>
                            </filter>
                           </withParam>
                          </callT>
                          <forEach line="522">
                           <filter flags="b">
                            <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                            <and op="and">
                             <vc op="eq" onEmpty="0" comp="CCC">
                              <fn name="local-name">
                               <dot type="element()"/>
                              </fn>
                              <varRef name="vv:v4" slot="12"/>
                             </vc>
                             <vc op="eq" onEmpty="0" comp="CCC">
                              <fn name="namespace-uri">
                               <dot type="element()"/>
                              </fn>
                              <varRef name="vv:v5" slot="11"/>
                             </vc>
                            </and>
                           </filter>
                           <sequence line="524">
                            <elem name="span" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                             <sequence>
                              <att name="property" flags="l">
                               <varRef name="vv:v6" slot="10"/>
                              </att>
                              <att name="content" flags="l">
                               <convert from="xs:untypedAtomic" to="xs:string">
                                <data>
                                 <dot type="element()"/>
                                </data>
                               </convert>
                              </att>
                              <choose line="525">
                               <fn name="exists">
                                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
                               </fn>
                               <att line="527" name="xml:lang" nsuri="http://www.w3.org/XML/1998/namespace" flags="l">
                                <convert from="xs:untypedAtomic" to="xs:string">
                                 <cast as="xs:untypedAtomic" emptiable="0">
                                  <fn name="string">
                                   <convert from="xs:untypedAtomic" to="xs:string">
                                    <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
                                   </convert>
                                  </fn>
                                 </cast>
                                </convert>
                               </att>
                              </choose>
                              <choose line="530">
                               <fn name="exists">
                                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                               </fn>
                               <sequence line="532">
                                <att name="datatype" flags="l">
                                 <fn name="string-join">
                                  <convert from="xs:anyAtomicType" to="xs:string">
                                   <data>
                                    <mergeAdj>
                                     <callT name="curie" bSlot="7">
                                      <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                                       <axis line="533" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                                      </withParam>
                                     </callT>
                                    </mergeAdj>
                                   </data>
                                  </convert>
                                  <str val=""/>
                                 </fn>
                                </att>
                                <let line="536" var="datatype-xmlns" as="document-node()" slot="16" eval="7">
                                 <doc line="537" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
                                  <callT name="xmlns" bSlot="8">
                                   <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                                    <axis line="538" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                                   </withParam>
                                  </callT>
                                 </doc>
                                 <copyOf line="541" flags="vc">
                                  <slash>
                                   <slash simple="1">
                                    <varRef name="datatype-xmlns" slot="16"/>
                                    <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                                   </slash>
                                   <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
                                  </slash>
                                 </copyOf>
                                </let>
                               </sequence>
                              </choose>
                             </sequence>
                            </elem>
                            <elem line="545" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                             <sequence>
                              <att name="class" flags="l">
                               <str val="property-object"/>
                              </att>
                              <callT line="546" name="textDetailLink" bSlot="9">
                               <withParam name="Q{}property" flags="c" as="xs:string">
                                <fn line="547" name="local-name">
                                 <dot type="element()"/>
                                </fn>
                               </withParam>
                               <withParam name="Q{}value" flags="c" as="item()">
                                <dot line="548" type="element()"/>
                               </withParam>
                              </callT>
                             </sequence>
                            </elem>
                            <callT line="551" name="connector" bSlot="10">
                             <withParam name="Q{}criteria" flags="c" as="element()*">
                              <filter line="553" flags="b">
                               <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                               <and op="and">
                                <vc op="eq" onEmpty="0" comp="CCC">
                                 <fn name="local-name">
                                  <dot type="element()"/>
                                 </fn>
                                 <varRef name="vv:v7" slot="9"/>
                                </vc>
                                <vc op="eq" onEmpty="0" comp="CCC">
                                 <fn name="namespace-uri">
                                  <dot type="element()"/>
                                 </fn>
                                 <varRef name="vv:v8" slot="8"/>
                                </vc>
                               </and>
                              </filter>
                             </withParam>
                            </callT>
                           </sequence>
                          </forEach>
                         </sequence>
                        </elem>
                       </sequence>
                      </elem>
                     </let>
                    </let>
                   </let>
                  </let>
                 </let>
                </let>
               </let>
              </choose>
             </let>
            </let>
            <true/>
            <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="563" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
             <sequence>
              <att name="property" flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <varRef name="propertyCurie" slot="4"/>
                </data>
               </convert>
              </att>
              <att name="content" flags="l">
               <convert from="xs:untypedAtomic" to="xs:string">
                <data>
                 <dot type="element()"/>
                </data>
               </convert>
              </att>
              <choose line="564">
               <fn name="exists">
                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/XML/1998/namespace}lang)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/XML/1998/namespace'&amp;&amp;q.local==='lang';"/>
               </fn>
               <att line="566" name="xml:lang" nsuri="http://www.w3.org/XML/1998/namespace" flags="l">
                <convert from="xs:untypedAtomic" to="xs:string">
                 <cast as="xs:untypedAtomic" emptiable="0">
                  <fn name="string">
                   <convert from="xs:untypedAtomic" to="xs:string">
                    <attVal name="Q{http://www.w3.org/XML/1998/namespace}lang" chk="0"/>
                   </convert>
                  </fn>
                 </cast>
                </convert>
               </att>
              </choose>
              <choose line="569">
               <fn name="exists">
                <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
               </fn>
               <sequence line="571">
                <att name="datatype" flags="l">
                 <fn name="string-join">
                  <convert from="xs:anyAtomicType" to="xs:string">
                   <data>
                    <mergeAdj>
                     <callT name="curie" bSlot="11">
                      <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                       <axis line="572" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                      </withParam>
                     </callT>
                    </mergeAdj>
                   </data>
                  </convert>
                  <str val=""/>
                 </fn>
                </att>
                <let line="575" var="datatype-xmlns" as="document-node()" slot="17" eval="7">
                 <doc line="576" base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
                  <callT name="xmlns" bSlot="12">
                   <withParam name="Q{}uri" flags="c" as="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)?">
                    <axis line="577" name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}datatype)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='datatype';"/>
                   </withParam>
                  </callT>
                 </doc>
                 <copyOf line="580" flags="vc">
                  <slash>
                   <slash simple="1">
                    <varRef name="datatype-xmlns" slot="17"/>
                    <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                   </slash>
                   <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
                  </slash>
                 </copyOf>
                </let>
               </sequence>
              </choose>
             </sequence>
            </elem>
           </choose>
          </let>
          <fn line="589" name="exists">
           <filter flags="b">
            <slash simple="1">
             <dot type="element()"/>
             <axis name="preceding-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <and op="and">
             <vc op="eq" onEmpty="0" comp="CCC">
              <fn name="local-name">
               <dot type="element()"/>
              </fn>
              <varRef name="vv:v9" slot="1"/>
             </vc>
             <vc op="eq" onEmpty="0" comp="CCC">
              <fn name="namespace-uri">
               <dot type="element()"/>
              </fn>
              <varRef name="vv:v10" slot="3"/>
             </vc>
            </and>
           </filter>
          </fn>
          <empty/>
          <true/>
          <let ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="635" var="vv:v17" as="xs:anyURI" slot="18" eval="13">
           <cast as="xs:anyURI" emptiable="0">
            <varRef name="property-namespace" slot="2"/>
           </cast>
           <let var="vv:v16" as="xs:string" slot="19" eval="13">
            <cast as="xs:string" emptiable="0">
             <varRef name="property-name" slot="0"/>
            </cast>
            <let line="630" var="vv:v15" as="xs:string" slot="20" eval="13">
             <convert from="xs:untypedAtomic" to="xs:string">
              <data>
               <varRef name="propertyCurie" slot="4"/>
              </data>
             </convert>
             <let line="629" var="vv:v14" as="xs:anyURI" slot="21" eval="13">
              <cast as="xs:anyURI" emptiable="0">
               <varRef name="property-namespace" slot="2"/>
              </cast>
              <let var="vv:v13" as="xs:string" slot="22" eval="13">
               <cast as="xs:string" emptiable="0">
                <varRef name="property-name" slot="0"/>
               </cast>
               <let line="626" var="vv:v12" as="xs:anyURI" slot="23" eval="13">
                <cast as="xs:anyURI" emptiable="0">
                 <varRef name="property-namespace" slot="2"/>
                </cast>
                <let var="vv:v11" as="xs:string" slot="24" eval="13">
                 <cast as="xs:string" emptiable="0">
                  <varRef name="property-name" slot="0"/>
                 </cast>
                 <elem line="593" name="tr" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
                  <sequence>
                   <att name="class" flags="l">
                    <fn name="concat">
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <varRef name="property-namespace" slot="2"/>
                     </convert>
                     <convert from="xs:untypedAtomic" to="xs:string">
                      <varRef name="property-name" slot="0"/>
                     </convert>
                    </fn>
                   </att>
                   <elem line="595" name="td" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                    <callT name="resourceDetailLink" bSlot="13">
                     <withParam name="Q{}property" flags="c" as="xs:string">
                      <str val=""/>
                     </withParam>
                     <withParam name="Q{}namespace" flags="c" as="xs:anyURI">
                      <fn line="597" name="namespace-uri">
                       <dot type="element()"/>
                      </fn>
                     </withParam>
                     <withParam name="Q{}localname" flags="c" as="xs:string">
                      <fn line="598" name="local-name">
                       <dot type="element()"/>
                      </fn>
                     </withParam>
                    </callT>
                   </elem>
                   <elem line="604" name="td" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                    <sequence>
                     <choose>
                      <or op="or">
                       <gc op="=" card="1:1" comp="CCC">
                        <attVal name="Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType" chk="0"/>
                        <str val="Literal"/>
                       </gc>
                       <and op="and">
                        <fn name="empty">
                         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                        </fn>
                        <and op="and">
                         <and op="and">
                          <fn name="empty">
                           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}resource)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='resource';"/>
                          </fn>
                          <fn name="empty">
                           <axis name="attribute" nodeTest="attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}nodeID)" jsTest="var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='nodeID';"/>
                          </fn>
                         </and>
                         <fn name="not">
                          <gc op="=" card="1:1" comp="CCC">
                           <attVal name="Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}parseType" chk="0"/>
                           <str val="Resource"/>
                          </gc>
                         </fn>
                        </and>
                       </and>
                      </or>
                      <elem line="605" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                       <sequence>
                        <att name="class" flags="l">
                         <str val="property-object"/>
                        </att>
                        <att name="property" flags="l">
                         <convert from="xs:untypedAtomic" to="xs:string">
                          <data>
                           <varRef name="propertyCurie" slot="4"/>
                          </data>
                         </convert>
                        </att>
                        <callT line="606" name="property-objects" bSlot="14"/>
                       </sequence>
                      </elem>
                      <fn line="611" name="exists">
                       <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}first)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='first';"/>
                      </fn>
                      <elem line="612" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                       <sequence>
                        <att name="class" flags="l">
                         <str val="list-object"/>
                        </att>
                        <att name="rel" flags="l">
                         <convert from="xs:untypedAtomic" to="xs:string">
                          <data>
                           <varRef name="propertyCurie" slot="4"/>
                          </data>
                         </convert>
                        </att>
                        <callT line="613" name="property-objects" bSlot="15"/>
                       </sequence>
                      </elem>
                      <true/>
                      <elem line="617" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                       <sequence>
                        <att name="class" flags="l">
                         <str val="property-object"/>
                        </att>
                        <att name="rel" flags="l">
                         <convert from="xs:untypedAtomic" to="xs:string">
                          <data>
                           <varRef name="propertyCurie" slot="4"/>
                          </data>
                         </convert>
                        </att>
                        <callT line="618" name="property-objects" bSlot="16"/>
                       </sequence>
                      </elem>
                     </choose>
                     <callT line="624" name="connector" bSlot="17">
                      <withParam name="Q{}criteria" flags="c" as="element()*">
                       <filter line="626" flags="b">
                        <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                        <and op="and">
                         <vc op="eq" onEmpty="0" comp="CCC">
                          <fn name="local-name">
                           <dot type="element()"/>
                          </fn>
                          <varRef name="vv:v11" slot="24"/>
                         </vc>
                         <vc op="eq" onEmpty="0" comp="CCC">
                          <fn name="namespace-uri">
                           <dot type="element()"/>
                          </fn>
                          <varRef name="vv:v12" slot="23"/>
                         </vc>
                        </and>
                       </filter>
                      </withParam>
                     </callT>
                     <forEach line="629">
                      <filter flags="b">
                       <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                       <and op="and">
                        <vc op="eq" onEmpty="0" comp="CCC">
                         <fn name="local-name">
                          <dot type="element()"/>
                         </fn>
                         <varRef name="vv:v13" slot="22"/>
                        </vc>
                        <vc op="eq" onEmpty="0" comp="CCC">
                         <fn name="namespace-uri">
                          <dot type="element()"/>
                         </fn>
                         <varRef name="vv:v14" slot="21"/>
                        </vc>
                       </and>
                      </filter>
                      <sequence line="630">
                       <elem name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
                        <sequence>
                         <att name="class" flags="l">
                          <str val="property-object"/>
                         </att>
                         <att name="rel" flags="l">
                          <varRef name="vv:v15" slot="20"/>
                         </att>
                         <callT line="631" name="property-objects" bSlot="18"/>
                        </sequence>
                       </elem>
                       <callT line="633" name="connector" bSlot="19">
                        <withParam name="Q{}criteria" flags="c" as="element()*">
                         <filter line="635" flags="b">
                          <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
                          <and op="and">
                           <vc op="eq" onEmpty="0" comp="CCC">
                            <fn name="local-name">
                             <dot type="element()"/>
                            </fn>
                            <varRef name="vv:v16" slot="19"/>
                           </vc>
                           <vc op="eq" onEmpty="0" comp="CCC">
                            <fn name="namespace-uri">
                             <dot type="element()"/>
                            </fn>
                            <varRef name="vv:v17" slot="18"/>
                           </vc>
                          </and>
                         </filter>
                        </withParam>
                       </callT>
                      </sequence>
                     </forEach>
                    </sequence>
                   </elem>
                  </sequence>
                 </elem>
                </let>
               </let>
              </let>
             </let>
            </let>
           </let>
          </let>
         </choose>
        </let>
       </let>
      </let>
     </let>
    </let>
   </forEach>
  </template>
 </co>
 <co id="30" binds="">
  <template name="Q{}rdfDescriptionEdition" flags="os" line="175" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" slots="0">
   <sequence role="body" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="177">
    <elem name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
     <sequence>
      <att name="class" flags="l">
       <str val="action"/>
      </att>
      <att name="href" flags="l">
       <fn name="concat">
        <str val="javascript:rhz.editResourceDescription('"/>
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
           </slash>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <str val="')"/>
       </fn>
      </att>
      <att name="title" flags="l">
       <str val="Edit description"/>
      </att>
      <valueOf flags="Sl">
       <str val="edit"/>
      </valueOf>
     </sequence>
    </elem>
    <valueOf line="175">
     <str val=" - &#xA;&#x9;&#x9;"/>
    </valueOf>
    <elem line="179" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
     <sequence>
      <att name="class" flags="l">
       <str val="action"/>
      </att>
      <att name="href" flags="l">
       <fn name="concat">
        <str val="javascript:rhz.newResourceDescription('"/>
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
           </slash>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <str val="')"/>
       </fn>
      </att>
      <att name="title" flags="l">
       <str val="New description"/>
      </att>
      <valueOf flags="Sl">
       <str val="new"/>
      </valueOf>
     </sequence>
    </elem>
    <valueOf line="175">
     <str val=" -&#xA;&#x9;&#x9;"/>
    </valueOf>
    <elem line="181" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
     <sequence>
      <att name="class" flags="l">
       <str val="action"/>
      </att>
      <att name="href" flags="l">
       <fn name="concat">
        <str val="javascript:rhz.deleteResourceDescription('"/>
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <slash simple="1">
            <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|2|XPTY0020|">
             <dot flags="a"/>
            </treat>
            <axis name="attribute" nodeTest="(attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}ID) | attribute(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about))" jsTest="function a() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='ID';};function b() {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='about';};return a()||b();"/>
           </slash>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <str val="')"/>
       </fn>
      </att>
      <att name="title" flags="l">
       <str val="Delete description"/>
      </att>
      <valueOf flags="Sl">
       <str val="del"/>
      </valueOf>
     </sequence>
    </elem>
   </sequence>
  </template>
 </co>
 <co id="31" binds="22 22">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg195384308" type="xs:boolean" line="56" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.boolean.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <or baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="56" op="or">
    <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
     <data>
      <gVarRef name="Q{}mode" bSlot="0"/>
     </data>
     <str val="snippet"/>
    </gc>
    <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
     <data>
      <gVarRef name="Q{}mode" bSlot="1"/>
     </data>
     <str val="rhizomer"/>
    </gc>
   </or>
  </globalVariable>
 </co>
 <co id="32" binds="22 32 24 31 22 32 24 29">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="34" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <sequence role="action" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="35">
     <choose>
      <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
       <data>
        <gVarRef name="Q{}mode" bSlot="0"/>
       </data>
       <str val="html"/>
      </gc>
      <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="36" name="html" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
       <sequence>
        <att name="version" flags="l">
         <str val="XHTML+RDFa 1.0"/>
        </att>
        <elem line="38" name="head" nsuri="http://www.w3.org/1999/xhtml" flags="dl">
         <sequence>
          <elem name="meta" nsuri="http://www.w3.org/1999/xhtml" flags="dl">
           <sequence>
            <att name="http-equiv" flags="l">
             <str val="Content-Type"/>
            </att>
            <att name="content" flags="l">
             <str val="text/xhtml; charset=UTF-8"/>
            </att>
           </sequence>
          </elem>
          <elem line="39" name="title" nsuri="http://www.w3.org/1999/xhtml" flags="dl">
           <valueOf flags="l">
            <str val="Rhizomik - ReDeFer - RDF2HTML"/>
           </valueOf>
          </elem>
          <elem line="40" name="link" nsuri="http://www.w3.org/1999/xhtml" flags="dl">
           <sequence>
            <att name="href" flags="l">
             <str val="/redefer-services/style/rhizomer.css"/>
            </att>
            <att name="type" flags="l">
             <str val="text/css"/>
            </att>
            <att name="rel" flags="l">
             <str val="stylesheet"/>
            </att>
           </sequence>
          </elem>
         </sequence>
        </elem>
        <elem line="43" name="body" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
         <sequence>
          <applyT bSlot="1">
           <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}RDF)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='RDF';"/>
          </applyT>
          <choose line="44">
           <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
            <data>
             <gVarRef name="Q{}logo" bSlot="2"/>
            </data>
            <str val="true"/>
           </gc>
           <elem line="45" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
            <sequence>
             <att name="id" flags="l">
              <str val="footlogo"/>
             </att>
             <elem line="46" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="dl">
              <sequence>
               <att name="id" flags="l">
                <str val="logo"/>
               </att>
               <elem line="47" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="#">
                <sequence>
                 <att name="href" flags="l">
                  <str val="http://rhizomik.net"/>
                 </att>
                 <elem line="48" name="img" nsuri="http://www.w3.org/1999/xhtml" flags="dl">
                  <sequence>
                   <att name="src" flags="l">
                    <str val="/redefer-services/images/rhizomer.small.png"/>
                   </att>
                   <att name="alt" flags="l">
                    <str val="Rhizomik"/>
                   </att>
                  </sequence>
                 </elem>
                 <valueOf flags="l">
                  <str val=" Powered by Rhizomik&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
                 </valueOf>
                </sequence>
               </elem>
              </sequence>
             </elem>
            </sequence>
           </elem>
          </choose>
         </sequence>
        </elem>
       </sequence>
      </elem>
     </choose>
     <choose line="56">
      <gVarRef name="Q{http://saxon.sf.net/generated-variable}gg195384308" bSlot="3"/>
      <sequence line="57">
       <choose>
        <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <data>
          <gVarRef name="Q{}mode" bSlot="4"/>
         </data>
         <str val="rhizomer"/>
        </gc>
        <elem line="58" name="div" nsuri="" namespaces="rdf rdfs">
         <sequence>
          <att name="class" flags="l">
           <str val="browser"/>
          </att>
          <elem line="59" name="a" nsuri="" flags="l">
           <sequence>
            <att name="href" flags="l">
             <str val="javascript:history.back()"/>
            </att>
            <valueOf flags="Sl">
             <str val="back"/>
            </valueOf>
           </sequence>
          </elem>
          <valueOf flags="l">
           <str val=" -&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;go to... -&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
          </valueOf>
          <elem line="61" name="a" nsuri="" flags="l">
           <sequence>
            <att name="href" flags="l">
             <str val="javascript:history.forward()"/>
            </att>
            <valueOf flags="Sl">
             <str val="forward"/>
            </valueOf>
           </sequence>
          </elem>
         </sequence>
        </elem>
       </choose>
       <applyT line="64" bSlot="5">
        <axis role="select" name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}RDF)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='RDF';"/>
       </applyT>
       <choose line="65">
        <gc op="=" card="N:1" comp="GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint">
         <data>
          <gVarRef name="Q{}logo" bSlot="6"/>
         </data>
         <str val="true"/>
        </gc>
        <elem line="66" name="div" nsuri="" namespaces="rdf rdfs">
         <sequence>
          <att name="id" flags="l">
           <str val="footlogo"/>
          </att>
          <elem line="67" name="div" nsuri="" flags="l">
           <sequence>
            <att name="id" flags="l">
             <str val="logo"/>
            </att>
            <elem ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="68" name="a" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
             <sequence>
              <att name="href" flags="l">
               <str val="http://rhizomik.net"/>
              </att>
              <elem line="69" name="img" nsuri="http://www.w3.org/1999/xhtml" flags="dl">
               <sequence>
                <att name="src" flags="l">
                 <str val="http://rhizomik.net/images/rhizomer.small.png"/>
                </att>
                <att name="alt" flags="l">
                 <str val="Rhizomik"/>
                </att>
               </sequence>
              </elem>
              <valueOf flags="l">
               <str val=" Powered by Rhizomik&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
              </valueOf>
             </sequence>
            </elem>
           </sequence>
          </elem>
         </sequence>
        </elem>
       </choose>
      </sequence>
     </choose>
     <valueOf line="76">
      <fn name="string-join">
       <convert from="xs:anyAtomicType" to="xs:string">
        <data>
         <fn name="key">
          <str val="Q{http://saxon.sf.net/}kk101"/>
          <str val="sourcetext"/>
          <dot type="document-node()"/>
         </fn>
        </data>
       </convert>
       <str val=" "/>
      </fn>
     </valueOf>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="79" module="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}RDF)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='RDF';"/>
    <elem role="action" baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="=http://www.w3.org/1999/xhtml xsl=~ rdfs=http://www.w3.org/2000/01/rdf-schema# rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#" line="80" name="div" nsuri="http://www.w3.org/1999/xhtml" flags="d" namespaces="# rdf rdfs">
     <sequence>
      <att name="class" flags="l">
       <str val="rdf2html"/>
      </att>
      <copyOf line="96" flags="vc">
       <slash>
        <slash line="83" simple="1">
         <doc base="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" validation="preserve">
          <sequence>
           <forEach>
            <filter flags="b">
             <slash>
              <slash simple="1">
               <root/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}RDF)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/1999/02/22-rdf-syntax-ns#'&amp;&amp;q.local==='RDF';"/>
              </slash>
              <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
             </slash>
             <and op="and">
              <vc op="ne" onEmpty="0" comp="CCC">
               <fn name="name">
                <dot type="namespace-node()"/>
               </fn>
               <str val="xml"/>
              </vc>
              <vc op="ne" onEmpty="0" comp="CCC">
               <fn name="name">
                <dot type="namespace-node()"/>
               </fn>
               <str val="xsd"/>
              </vc>
             </and>
            </filter>
            <choose line="86">
             <fn name="not">
              <fn name="name">
               <dot type="namespace-node()"/>
              </fn>
             </fn>
             <compElem line="87" flags="l">
              <str role="name" val="base:dummy-for-xmlns"/>
              <data role="namespace">
               <dot type="namespace-node()"/>
              </data>
              <empty role="content"/>
             </compElem>
             <true/>
             <compElem line="90" flags="l">
              <fn role="name" name="concat">
               <fn name="name">
                <dot type="namespace-node()"/>
               </fn>
               <str val=":dummy-for-xmlns"/>
              </fn>
              <data role="namespace">
               <dot type="namespace-node()"/>
              </data>
              <empty role="content"/>
             </compElem>
            </choose>
           </forEach>
           <elem xmlns:xsd="http://www.w3.org/2001/XMLSchema#" name="xsd:dummy-for-xmlns" nsuri="http://www.w3.org/2001/XMLSchema#" flags="l">
            <empty/>
           </elem>
          </sequence>
         </doc>
         <axis line="96" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </slash>
        <axis name="namespace" nodeTest="namespace-node()" jsTest="return SaxonJS.U.isNamespaceNode(item)"/>
       </slash>
      </copyOf>
      <choose line="99">
       <fn name="empty">
        <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
       </fn>
       <elem line="100" name="p" nsuri="http://www.w3.org/1999/xhtml" flags="dl" namespaces="# rdf rdfs">
        <valueOf flags="l">
         <str val="No data retrieved."/>
        </valueOf>
       </elem>
      </choose>
      <forEach line="103">
       <sort>
        <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        <sortKey line="104" comp="CCC">
         <attVal role="select" name="Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about" chk="0"/>
         <str role="order" val="ascending"/>
         <str role="lang" val=""/>
         <str role="caseOrder" val="#default"/>
         <str role="stable" val="yes"/>
         <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
        </sortKey>
       </sort>
       <callT line="105" name="rdfDescription" bSlot="7"/>
      </forEach>
     </sequence>
    </elem>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{http://saxon.sf.net/}kk101" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="76" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <fn baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="76" name="local-name">
   <dot type="element()"/>
  </fn>
 </key>
 <key name="Q{http://saxon.sf.net/}kk102" line="0" binds="" flags="u">
  <p.nodeSet type="element()">
   <axis baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="801" name="descendant" nodeTest="element()" jsTest="return item.nodeType===1;"/>
  </p.nodeSet>
  <attVal baseUri="file:/home/cyrillmartin/Documents/e-editiones/assets/rdf2html.xsl" ns="xsl=~ rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs=http://www.w3.org/2000/01/rdf-schema#" line="-1" name="Q{http://www.w3.org/1999/02/22-rdf-syntax-ns#}about" chk="0"/>
 </key>
 <output>
  <property name="indent" value="yes"/>
  <property name="encoding" value="UTF-8"/>
  <property name="media-type" value="text/xhtml"/>
  <property name="omit-xml-declaration" value="no"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="20"/>
  <property name="method" value="html"/>
 </output>
 <strip>
  <s test="element()" prec="0"/>
 </strip>
 <stripJS test="return true;"/>
 <decimalFormat/>
</package>
<?Σ da294e02?>
